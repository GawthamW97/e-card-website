{"version":3,"sources":["store/actions/authAction.js","components/auth/layout/LoggedInLink.js","components/auth/layout/LoggedOutLink.js","components/auth/layout/adminLink.js","components/auth/layout/NavBar.js","components/profile/Notification.js","components/profile/NotificationList.js","components/connections/Connection.js","components/connections/ConnectionList.js","components/profile/Dashboard.js","store/actions/adminAction.js","components/auth/Validation.js","components/connections/ViewConnection.js","store/actions/profileAction.js","components/auth/Login.js","components/auth/Register.js","components/profile/CreateProfile.js","components/profile/UserProfile.js","components/admin/GridView.js","components/admin/AdminPage.js","components/settings/ChangePassword.js","components/settings/ChangeEmail.js","components/admin/Graphs.js","components/admin/Content.js","components/profile/HomePage.js","components/auth/Verification.js","App.js","serviceWorker.js","store/reducer/authReducer.js","store/reducer/profileReducer.js","store/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["register","newUser","dispatch","getState","firebase","firestore","auth","createUserWithEmailAndPassword","eM","pwd","then","resp","collection","doc","user","uid","set","fN","lN","type","catch","err","connect","logout","signOut","props","React","useState","anchorEl","setAnchorEl","style","display","to","color","textDecoration","Button","startIcon","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","Avatar","src","profile","pPic","margin","LoggedOutLink","className","useStyles","makeStyles","theme","root","flexGrow","title","flex","fontSize","fontFamily","state","classes","adminlinks","status","links","AppBar","position","backgroundColor","Toolbar","variant","Typography","Notification","notification","marginBottom","padding","component","fontWeight","content","clear","paddingLeft","moment","time","toDate","fromNow","NotificationList","map","item","key","maxWidth","pos","large","width","spacing","height","Connection","Card","borderLeft","CardContent","Grid","container","spcing","xs","paddingTop","alt","border","paddingBottom","background","borderRadius","cmp","ConnectionList","profiles","paper","textAlign","palette","text","secondary","compose","ordered","current_user","notify","firestoreConnect","orderBy","term","setTerm","setItem","setID","handleID","e","target","conn_list","notify_list","num","emailVerified","isLoaded","isEmpty","conn","length","i","push","undefined","marginTop","Paper","elevation","align","Grow","in","transformOrigin","timeout","marginLeft","TextField","label","onChange","value","marginRight","float","InputLabel","Select","labelId","disableUnderline","overflow","filter","x","toLowerCase","includes","searchingFor","person","borderRight","deleteUser","storage","ref","currentUser","delete","listAll","result","items","forEach","file","error","validEmailRegex","RegExp","validPasswordRegex","validNameRegex","validPhoneNoRegex","checkMinLength","checkMaxLength","isErrorObjectEmpty","errors","valid","Object","values","val","validate","_errors","test","Number","Transition","forwardRef","Slide","direction","ownProps","match","params","data","localStorage","JSON","stringify","parse","getItem","conn_profile","admin_profile","updateConnection","update","deleteConnection","FieldValue","arrayRemove","setOpen","setValid","handleClose","adr","pNo","wNo","front","back","setDoc","snackbarUpdate","setSnackbarUpdate","closeSnackbarUpdate","reason","snackbarDelete","setsnackbarDelete","closeSnackbarDelete","useEffect","tField","validateInputAndSetState","validator","parseInt","handleChange","onDelete","history","goBack","admin","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","action","Fragment","IconButton","size","aria-label","helperText","disabled","preventDefault","entries","isFormValid","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","authError","login","creds","credentials","signInWithEmailAndPassword","email","password","resetPassword","emailAddress","mail","toString","sendPasswordResetEmail","console","log","setState","setMail","Container","onSubmit","window","alert","noValidate","fullWidth","required","name","autoComplete","autoFocus","regError","repwd","createProfile","imageUpload","setImageUpload","snackbar","setSnackbar","closeSnackBar","removeItem","input","handleSubmit","files","URL","createObjectURL","whiteSpace","wordWrap","accept","multiple","htmlFor","document","getElementById","metadata","contentType","child","put","snapshot","getDownloadURL","url","curr_user","updateProfile","openDel","setOpenDel","handleDelClose","handleDel","onImageChange","backView","frontView","frontUpload","backUpload","pPicUpload","checked","profileView","descendingComparator","a","b","headCells","numeric","disablePadding","EnhancedTableHead","order","onRequestSort","TableHead","TableRow","TableCell","headCell","sortDirection","TableSortLabel","active","property","visuallyHidden","table","minWidth","clip","top","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","prof","setProf","rows","getData","emptyRows","Math","min","handleDialog","row","handleDelete","TableContainer","Table","numSelected","itemList","onSelectAllClick","newSelecteds","n","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","isItemSelected","indexOf","isSelected","hover","role","aria-checked","tabIndex","scope","handleClickOpen","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","FormControlLabel","control","Switch","circlular","changePwd","credential","EmailAuthProvider","reauthenticateWithCredential","userCredential","updatePassword","updateEmail","list","Graph","dataList","chartAData","setchartAData","chartBData","setchartBData","noUsers","setNoUsers","prevUser","setPrevUser","prevConn","setPrevConn","noConn","setNoConn","lwUser","setlwUser","lwConn","setlwConn","usageValue","setUsageValue","prevValue","setPrevValue","users","userPrev","connPrev","usageRate","prevData","now","Date","day","getDay","noUser","toFixed","j","prevC","prevD","labels","datasets","borderColor","borderWidth","fill","pointBackgroundColor","pointBorderWidth","pointRadius","hoverBackgroundColor","chart","prevDay","options","responsive","scales","yAxes","ticks","autoSkip","maxTicksLimit","beginAtZero","gridLines","xAxes","tooltips","enabled","checkStatusOfConnection","checkStatusOfUsers","info","news","uploadNews","obj","updateContact","msg","date","setNews","fN1","lN1","pNo1","eM1","fN2","lN2","pNo2","eM2","contact","setContact","handleClick","handleContact","multiline","sendEmailVerification","handleCodeInApp","App","exact","path","Dashboard","ViewConnection","Login","Register","CreateProfile","UserProfile","Admin","ChangePwd","ChangeEmail","Graphs","Content","HomePage","Verification","Component","location","hostname","initState","authReducer","profileReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","settings","apps","fbConfig","peristedState","serializedState","loadState","store","createStore","applyMiddleware","thunk","withExtraArgument","subscribe","throttle","saveState","todos","rrfProps","config","createFirestoreInstance","AuthIsLoaded","children","useSelector","CircularProgress","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.aa38cf85.chunk.js","sourcesContent":["export const login = (credentials) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\r\n      .then(() => {\r\n        dispatch({ type: \"LOGIN_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"LOGIN_FAILED\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const logout = () => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        dispatch({ type: \"LOGOUT_SUCCESS\" });\r\n      });\r\n  };\r\n};\r\n\r\nexport const register = (newUser) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const firestore = firebase.firestore();\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(newUser.eM, newUser.pwd)\r\n      .then((resp) => {\r\n        return firestore.collection(\"user\").doc(resp.user.uid).set({\r\n          fN: newUser.fN,\r\n          lN: newUser.lN,\r\n        });\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"REGISTER_SUCCESS\" });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({ type: \"REGISTER_ERROR\", err });\r\n      });\r\n  };\r\n};\r\n\r\nexport const resetPassword = (email) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    var auth = firebase.auth();\r\n    var emailAddress = email.mail.toString();\r\n\r\n    auth\r\n      .sendPasswordResetEmail(emailAddress)\r\n      .then(function () {})\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../../store/actions/authAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst LoggedInLink = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {/* <li><NavLink to='/create'>Create Profile</NavLink></li> */}\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink to=\"/home\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n          <Button style={{ color: \"white\" }} startIcon={<HomeIcon />}>\r\n            Home\r\n          </Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <NavLink to=\"/\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n            Cards\r\n          </NavLink>\r\n        </Button>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <div>\r\n            <div\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              Settings\r\n            </div>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem>\r\n                <NavLink\r\n                  to=\"/profile\"\r\n                  style={{ color: \"black\", textDecoration: \"none\" }}\r\n                >\r\n                  Profile\r\n                </NavLink>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <NavLink\r\n                  to=\"/email\"\r\n                  style={{ color: \"black\", textDecoration: \"none\" }}\r\n                >\r\n                  Change Email Address\r\n                </NavLink>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <NavLink\r\n                  to=\"/pwd\"\r\n                  style={{ color: \"black\", textDecoration: \"none\" }}\r\n                >\r\n                  Change Password\r\n                </NavLink>\r\n              </MenuItem>\r\n              <MenuItem onClick={props.logout} to=\"/\">\r\n                Logout\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Button>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <NavLink to=\"/profile\" style={{ textDecoration: \"none\" }}>\r\n            <Avatar\r\n              src={\r\n                props.profile.pPic ||\r\n                \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n              }\r\n              style={{ margin: \"10px\" }}\r\n            />\r\n          </NavLink>\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoggedInLink);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst LoggedOutLink = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink to=\"/home\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n          <Button style={{ color: \"white\" }} startIcon={<HomeIcon />}>\r\n            Home\r\n          </Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <NavLink\r\n            to=\"/register\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Register\r\n          </NavLink>\r\n        </Button>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <NavLink\r\n            to=\"/login\"\r\n            style={{ color: \"white\", textDecoration: \"none\" }}\r\n          >\r\n            Login\r\n          </NavLink>\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default LoggedOutLink;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../../store/actions/authAction\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nconst LoggedInLink = (props) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  return (\r\n    <ul>\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink to=\"/home\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n          <Button style={{ color: \"white\" }} startIcon={<HomeIcon />}>\r\n            Home\r\n          </Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink\r\n          to=\"/dashboard\"\r\n          style={{ color: \"black\", textDecoration: \"none\" }}\r\n        >\r\n          <Button style={{ color: \"white\" }}>Dashboard</Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink to=\"/users\" style={{ color: \"black\", textDecoration: \"none\" }}>\r\n          <Button style={{ color: \"white\" }}>Users</Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <NavLink\r\n          to=\"/content\"\r\n          style={{ color: \"black\", textDecoration: \"none\" }}\r\n        >\r\n          <Button style={{ color: \"white\" }}>Contents</Button>\r\n        </NavLink>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button style={{ color: \"white\" }}>\r\n          <div>\r\n            <div\r\n              aria-controls=\"simple-menu\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleClick}\r\n            >\r\n              Settings\r\n            </div>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <NavLink\r\n                to=\"/profile\"\r\n                style={{ color: \"black\", textDecoration: \"none\" }}\r\n              >\r\n                <MenuItem>Profile</MenuItem>\r\n              </NavLink>\r\n              <MenuItem>\r\n                <NavLink\r\n                  to=\"/email\"\r\n                  style={{ color: \"black\", textDecoration: \"none\" }}\r\n                >\r\n                  Change Email Address\r\n                </NavLink>\r\n              </MenuItem>\r\n              <MenuItem>\r\n                <NavLink\r\n                  to=\"/pwd\"\r\n                  style={{ color: \"black\", textDecoration: \"none\" }}\r\n                >\r\n                  Change Password\r\n                </NavLink>\r\n              </MenuItem>\r\n              <MenuItem onClick={props.logout} to=\"/\">\r\n                Logout\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n        </Button>\r\n      </li>\r\n      <li style={{ display: \"inline\" }}>\r\n        <Button>\r\n          <NavLink\r\n            to=\"/profile\"\r\n            style={{ color: \"black\", textDecoration: \"none\" }}\r\n          >\r\n            <Avatar\r\n              src={\r\n                props.profile.pPic ||\r\n                \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n              }\r\n              style={{ margin: \"5px\" }}\r\n            />\r\n          </NavLink>\r\n        </Button>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(LoggedInLink);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoggedInLink from \"./LoggedInLink\";\r\nimport LoggedOutLink from \"./LoggedOutLink\";\r\nimport AdminLink from \"./adminLink\";\r\nimport { connect } from \"react-redux\";\r\nimport { AppBar, Toolbar, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n\r\n  title: {\r\n    flex: 1,\r\n    fontSize: 32,\r\n    fontFamily: \"Sans-Serif\",\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst Navbar = (props) => {\r\n  const classes = useStyles();\r\n  const { auth, profile } = props;\r\n\r\n  const adminlinks = profile.status ? <AdminLink profile={profile} /> : null;\r\n  const links = auth.uid ? (\r\n    <LoggedInLink profile={profile} />\r\n  ) : (\r\n    <LoggedOutLink />\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#3949ab\" }}>\r\n        <Toolbar variant=\"dense\">\r\n          <Typography variant=\"h4\" className={classes.title}>\r\n            <Link to=\"/home\" style={{ color: \"white\", textDecoration: \"none\" }}>\r\n              E-Card\r\n            </Link>\r\n          </Typography>\r\n          {adminlinks === null ? links : adminlinks}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport moment from \"moment\";\r\n\r\nconst Notification = ({ notification }) => {\r\n  // const { notification } = props;\r\n  return (\r\n    <div style={{ marginBottom: \"20px\" }}>\r\n      <Typography\r\n        style={{ display: \"inline\", padding: \"5px\" }}\r\n        component=\"span\"\r\n      >\r\n        <span style={{ fontWeight: \"bold\", color: \"#3f51b5\" }}>\r\n          {notification.user}\r\n        </span>\r\n        <span style={{ color: \"black\" }}> {notification.content}</span>\r\n      </Typography>\r\n      <Typography\r\n        style={{\r\n          color: \"#546e7a\",\r\n          fontSize: \"13px\",\r\n          clear: \"left\",\r\n          paddingLeft: \"5px\",\r\n        }}\r\n      >\r\n        {moment(notification.time.toDate()).fromNow()}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"./Notification\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotificationList = ({ notification }) => {\r\n  return (\r\n    <div>\r\n      {notification &&\r\n        notification.map((item) => {\r\n          return (\r\n            <div key={item.id}>\r\n              <Link\r\n                to={\"/profile/\" + item.id}\r\n                key={item.id}\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                <Notification notification={item} key={item.id} />\r\n              </Link>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationList;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: \"90%\",\r\n    margin: \"auto\",\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  large: {\r\n    width: theme.spacing(10),\r\n    height: theme.spacing(10),\r\n  },\r\n}));\r\n\r\nconst Connection = ({ profile }) => {\r\n  const classes = useStyles();\r\n  //set the profile prop values\r\n  return (\r\n    <div>\r\n      <Card\r\n        className={classes.root}\r\n        style={{\r\n          borderLeft: \"5px solid #3f51b5\",\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Grid container spcing={3}>\r\n            <Grid item xs={6}>\r\n              <div style={{ paddingLeft: \"10px\", paddingTop: \"15px\" }}>\r\n                <Avatar\r\n                  alt={profile.fN}\r\n                  src={\r\n                    profile.pPic ||\r\n                    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                  }\r\n                  className={classes.large}\r\n                  style={{ border: \"2.5px solid #3f51b5\" }}\r\n                />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div\r\n                style={{\r\n                  paddingTop: \"15px\",\r\n                  paddingLeft: \"15px\",\r\n                  paddingBottom: \"5px\",\r\n                  background: \"#3f51b5\",\r\n                  borderRadius: \"10px\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <Typography className={classes.pos}>\r\n                  <label style={{ fontWeight: \"bold\" }}>Name: </label>\r\n                  {profile.fN} {profile.lN}\r\n                </Typography>\r\n                <Typography className={classes.pos}>\r\n                  <label style={{ fontWeight: \"bold\" }}>Company:</label>{\" \"}\r\n                  {profile.cmp}\r\n                </Typography>\r\n                <Typography className={classes.pos}>\r\n                  <label style={{ fontWeight: \"bold\" }}>Position:</label>{\" \"}\r\n                  {profile.pos}\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Connection;\r\n","import React from \"react\";\r\nimport Connection from \"./Connection\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ConnectionList = ({ profiles }) => {\r\n  return (\r\n    <div>\r\n      <Link\r\n        to={\"/profile/\" + profiles.id}\r\n        key={profiles.id}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        <Connection profile={profiles} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionList;\r\n","import React, { useState } from \"react\";\r\nimport NotificationList from \"./NotificationList\";\r\nimport ConnectionList from \"../connections/ConnectionList\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { Card, Paper, CardContent } from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n}));\r\n\r\nfunction Dashboard(props) {\r\n  const [term, setTerm] = useState(\"\");\r\n  const [item, setItem] = useState(\"First Name\");\r\n  const [id, setID] = useState(\"fN\");\r\n\r\n  const classes = useStyles();\r\n\r\n  function searchBar(e) {\r\n    setTerm(e.target.value);\r\n  }\r\n  const handleChange = (event) => {\r\n    setItem(event.target.value);\r\n  };\r\n\r\n  function handleID(e) {\r\n    setID(e.target.id);\r\n  }\r\n\r\n  const conn_list = [];\r\n  const notify_list = [];\r\n  var num = 0;\r\n  const { profiles, auth, current_user, notification } = props;\r\n\r\n  //check if the user is logged in or not\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n\r\n  //check if the eamil is verified or not\r\n  if (!auth.emailVerified) return <Redirect to=\"/verify\" />;\r\n  //check if the user is an admin\r\n  if (current_user.status) return <Redirect to=\"/dashboard\" />;\r\n  //check if the user has created a profile or not\r\n  if (current_user.isLoaded && current_user.isEmpty)\r\n    return <Redirect to=\"/create\" />;\r\n\r\n  if (current_user.isLoaded && !current_user.isEmpty) {\r\n    num = current_user.conn.length;\r\n  }\r\n  profiles &&\r\n    profiles.map((user) => {\r\n      if (current_user.conn != null) {\r\n        for (var i = 0; i < current_user.conn.length; i++) {\r\n          if (current_user.conn[i] === user.id) {\r\n            conn_list.push(user);\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n\r\n  notification &&\r\n    notification.map((user) => {\r\n      if (current_user.conn != null) {\r\n        for (var i = 0; i < current_user.conn.length; i++) {\r\n          if (current_user.conn[i] === user.id) {\r\n            notify_list.push(user);\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    });\r\n  const checked = true;\r\n  if (profiles !== undefined && !current_user.status) {\r\n    return (\r\n      <div\r\n        className={classes.root}\r\n        style={{ marginTop: \"15px\", marginBottom: \"20px\" }}\r\n      >\r\n        <Paper elevation={3} style={{ width: \"90%\", margin: \"auto\" }}>\r\n          <div align=\"center\">\r\n            <Typography variant=\"h3\">\r\n              Dashboard\r\n              <hr />\r\n            </Typography>\r\n          </div>\r\n          <Grid container spcing={2}>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <div\r\n                  className={classes.paper}\r\n                  style={{ display: \"flex\", marginLeft: \"60px\" }}\r\n                >\r\n                  <TextField\r\n                    id=\"filled-basic\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    onChange={searchBar}\r\n                    style={{ width: \"75%\", marginRight: 0 }}\r\n                  />\r\n                  <div\r\n                    style={{\r\n                      float: \"right\",\r\n                      marginLeft: 0,\r\n                      paddingTop: \"8px\",\r\n                      paddingLeft: \"2px\",\r\n                    }}\r\n                  >\r\n                    <InputLabel id=\"demo-simple-select-label\">\r\n                      Search By\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"demo-simple-select\"\r\n                      value={item}\r\n                      onChange={handleChange}\r\n                      disableUnderline={true}\r\n                    >\r\n                      <MenuItem\r\n                        id=\"fN\"\r\n                        value={\"First Name\"}\r\n                        onClick={(e) => handleID(e)}\r\n                      >\r\n                        First Name\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        id=\"lN\"\r\n                        value={\"Last Name\"}\r\n                        onClick={(e) => handleID(e)}\r\n                      >\r\n                        Last Name\r\n                      </MenuItem>\r\n                      <MenuItem\r\n                        id=\"cmp\"\r\n                        value={\"Company\"}\r\n                        onClick={(e) => handleID(e)}\r\n                      >\r\n                        Company\r\n                      </MenuItem>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n                <div\r\n                  align=\"center\"\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    width: \"80%\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"h5\">\r\n                    Your Card List <hr />\r\n                  </Typography>\r\n                </div>\r\n                {conn_list.length !== 0 ? (\r\n                  <div style={{ overflow: \"auto\", height: \"380px\" }}>\r\n                    {conn_list.filter(searchingFor(term, id)).map((person) => (\r\n                      <ul key={person.id}>\r\n                        <ConnectionList profiles={person} />\r\n                        {/* Display the list of connection the user has */}\r\n                      </ul>\r\n                    ))}\r\n                  </div>\r\n                ) : (\r\n                  <div align=\"center\" style={{ height: \"250px\" }}>\r\n                    <Typography variant=\"h6\">\r\n                      Currently you don't have any Cards\r\n                    </Typography>\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Card\r\n                  align=\"center\"\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    width: \"70%\",\r\n                    marginBottom: \"28px\",\r\n                    background: \"#3f51b5\",\r\n                    color: \"white\",\r\n                    height: \"100px\",\r\n                  }}\r\n                >\r\n                  <CardContent>\r\n                    <Typography variant=\"h4\">\r\n                      {current_user.fN} {current_user.lN}\r\n                    </Typography>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      style={{\r\n                        paddingTop: \"10px\",\r\n                      }}\r\n                    >\r\n                      Number of Cards - {num}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n                <div\r\n                  style={{\r\n                    margin: \"auto\",\r\n                    width: \"70%\",\r\n                  }}\r\n                >\r\n                  <Card style={{ borderRight: \"3px solid #3f51b5\" }}>\r\n                    <div style={{ background: \"#3f51b5\", color: \"white\" }}>\r\n                      <Typography\r\n                        variant=\"h5\"\r\n                        style={{ paddingLeft: \"15px\", paddingBottom: \"5px\" }}\r\n                        align=\"center\"\r\n                      >\r\n                        Notifications\r\n                      </Typography>\r\n                      <hr />\r\n                    </div>\r\n                    {notify_list.length !== 0 ? (\r\n                      <div\r\n                        style={{\r\n                          margin: \"auto\",\r\n                          marginLeft: \"15%\",\r\n                          overflow: \"auto\",\r\n                          height: \"120px\",\r\n                          marginTop: \"15px\",\r\n                        }}\r\n                      >\r\n                        <NotificationList notification={notify_list} />\r\n                      </div>\r\n                    ) : (\r\n                      <div align=\"center\" style={{ marginBottom: \"40px\" }}>\r\n                        <Typography>No Notifications to Show</Typography>\r\n                      </div>\r\n                    )}\r\n                  </Card>\r\n                </div>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <Card />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction searchingFor(term, type) {\r\n  return function (x) {\r\n    return x[type].toLowerCase().includes(term.toLowerCase()) || !term;\r\n  };\r\n}\r\n\r\n//variable name must be same when passing props to the nested component and mapping stateProps\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profiles: state.firestore.ordered.user, // get the  list of user from the\r\n    auth: state.firebase.auth,\r\n    current_user: state.firebase.profile,\r\n    notification: state.firestore.ordered.notify,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: \"user\" },\r\n    { collection: \"notify\", orderBy: [\"time\", \"desc\"] },\r\n  ])\r\n)(Dashboard);\r\n","export const updateProfile = (profile) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    //make asyn call to database\r\n\r\n    const firestore = firebase.firestore();\r\n    const id = getState().firebase.auth.uid.toString();\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(id)\r\n      .update({\r\n        // fields and values to be added in the database\r\n        ...profile,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"UPDATE_PROFILE\", profile });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"UPDATE_PROFILE_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateConnection = (profile, uid) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    //make asyn call to database\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(uid)\r\n      .update({\r\n        // fields and values to be updated in the database\r\n        ...profile,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"UPDATE_PROFILE\", profile });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"UPDATE_PROFILE_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteUser = (uid) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const firestore = firebase.firestore();\r\n    const storage = firebase.storage().ref(uid);\r\n    const user = firebase.auth().currentUser;\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(uid)\r\n      .delete()\r\n      .catch((e) => {\r\n        dispatch({ type: \"DELETE_PROFILE_ERROR\", e });\r\n      });\r\n    storage\r\n      .listAll()\r\n      .then(function (result) {\r\n        result.items.forEach(function (file) {\r\n          file.delete();\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({ type: \"DELETE_PROFILE_ERROR\", error });\r\n      });\r\n    user\r\n      .delete()\r\n      .then(function () {\r\n        dispatch({ type: \"DELETE_PROFILE\" });\r\n      })\r\n      .catch(function (error) {\r\n        // An error happened.\r\n        dispatch({ type: \"DELETE_PROFILE_ERROR\", error });\r\n      });\r\n  };\r\n};\r\n\r\nexport const uploadNews = (obj) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const firestore = firebase.firestore();\r\n\r\n    firestore\r\n      .collection(\"news\")\r\n      .doc(\"msg\")\r\n      .update({\r\n        ...obj,\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateContact = (obj) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"news\")\r\n      .doc(\"msg\")\r\n      .update({\r\n        ...obj,\r\n      });\r\n  };\r\n};\r\n","const validEmailRegex = RegExp(\r\n  /^(([^<>()[\\].,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\].,;:\\s@\"]+\\.)+[^<>()[\\].,;:\\s@\"]{2,})$/i\r\n);\r\n\r\nconst validPasswordRegex = RegExp(\r\n  \"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})\"\r\n);\r\n\r\nconst validNameRegex = RegExp(/[ !@#$%^&*(),.?\":{}|<>0-9]/i);\r\n\r\nconst validPhoneNoRegex = RegExp(\"^[0-9]{10}$\");\r\n\r\nconst checkMinLength = (value, length) => value.length < length;\r\n\r\nconst checkMaxLength = (value, length) => value.length > length;\r\n\r\nexport const fromValidations = () => {};\r\n\r\nexport const isErrorObjectEmpty = (errors) => {\r\n  let valid = true;\r\n  Object.values(errors).forEach((val) => {\r\n    if (val.length > 0) {\r\n      valid = false;\r\n    }\r\n  });\r\n  return valid;\r\n};\r\n\r\n/**\r\n * Validates provided form input 'value' according to the provided form input 'id'\r\n * @param {string} id form input id\r\n * @param {string} value form input value\r\n * @param {Object} _errors component state error object\r\n * @returns {Object} received errors object as-is or populated if there is an error\r\n */\r\n\r\nexport const validate = (id, value, _errors) => {\r\n  let errors = _errors;\r\n  // let errors = {};\r\n  if (id === \"fN\" || id === \"fN1\" || id === \"fN2\") {\r\n    if (validNameRegex.test(value)) {\r\n      errors[id] = \"Can not contain special characters or numbers\";\r\n    } else if (checkMinLength(value, 3)) {\r\n      errors[id] = \"At least 3 letters needed\";\r\n    } else if (checkMaxLength(value, 15)) {\r\n      errors[id] = \"Maximum number of characters allowed is 15\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  if (id === \"lN\" || id === \"lN1\" || id === \"lN2\") {\r\n    if (validNameRegex.test(value)) {\r\n      errors[id] = \"Can not contain special characters or numbers\";\r\n    } else if (checkMinLength(value, 3)) {\r\n      errors[id] = \"At least 3 letters needed\";\r\n    } else if (checkMaxLength(value, 15)) {\r\n      errors[id] = \"Maximum number of characters allowed is 15\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  if (\r\n    id === \"email\" ||\r\n    id === \"em\" ||\r\n    id === \"eM\" ||\r\n    id === \"eM1\" ||\r\n    id === \"eM2\"\r\n  ) {\r\n    if (checkMinLength(value, 1)) {\r\n      errors[id] = \"Email cannot be blank\";\r\n    } else if (!validEmailRegex.test(value)) {\r\n      errors[id] = \"Invalid Email\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  //password for register\r\n  if (id === \"pwd\" || id === \"repwd\") {\r\n    if (checkMinLength(value, 1)) {\r\n      errors[id] = \"Please enter your password\";\r\n    } else if (checkMinLength(value, 8)) {\r\n      errors[id] = \"Password should be 8-30 characters long\";\r\n    } else if (checkMaxLength(value, 30)) {\r\n      errors[id] = \"Maximum number of characters allowed is 30\";\r\n    } else if (!validPasswordRegex.test(value)) {\r\n      errors[id] =\r\n        \"Password should contain at least 1 uppercase letter, 1 lowercase letter, 1 numeric character and 1 special character\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  //password for login\r\n  if (id === \"password\") {\r\n    if (checkMinLength(value, 1)) {\r\n      errors[id] = \"Please enter your password\";\r\n    } else if (checkMaxLength(value, 30)) {\r\n      errors[id] = \"Maximum number of characters allowed is 30\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  // Position\r\n  if (id === \"pos\") {\r\n    if (checkMinLength(value, 3)) {\r\n      errors[id] = \"Field can not be blank\";\r\n    } else if (checkMaxLength(value, 30)) {\r\n      errors[id] = \"Maximum number of characters allowed is 30\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  // Company name\r\n  if (id === \"cmp\") {\r\n    if (checkMinLength(value, 1)) {\r\n      errors[id] = \"Field can not be blank\";\r\n    } else if (checkMaxLength(value, 30)) {\r\n      errors[id] = \"Maximum number of characters allowed is 30\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  // Address\r\n  if (id === \"adr\") {\r\n    if (checkMinLength(value, 1)) {\r\n      errors[id] = \"Field can not be blank\";\r\n    } else if (checkMaxLength(value, 30)) {\r\n      errors[id] = \"Maximum number of characters allowed is 30\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  // personal phone number\r\n  if (id === \"pNo\" || id === \"pNo1\" || id === \"pNo2\") {\r\n    if (Number(value) === 0) {\r\n      errors[id] = \"Field can not be blank\";\r\n    } else if (!validPhoneNoRegex.test(value)) {\r\n      errors[id] = \"Field requires 10 digits\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n\r\n  // work phone number\r\n  if (id === \"wNo\") {\r\n    if (Number(value) === 0) {\r\n      errors[id] = \"Field can not be blank\";\r\n    } else if (!validPhoneNoRegex.test(value)) {\r\n      errors[id] = \"Field requires 10 digits\";\r\n    } else {\r\n      errors[id] = \"\";\r\n    }\r\n  }\r\n  // return error object\r\n  return errors;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { updateConnection } from \"../../store/actions/adminAction\";\r\nimport { deleteUser } from \"../../store/actions/adminAction\";\r\nimport { deleteConnection } from \"../../store/actions/profileAction\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Paper } from \"@material-ui/core\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport * as validator from \"../auth/Validation\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n//Initiate state when the page loads\r\nfunction ViewConnection(props) {\r\n  const initState = {\r\n    fN: \"\",\r\n    lN: \"\",\r\n    cmp: \"\",\r\n    adr: \"\",\r\n    pNo: 0,\r\n    wNo: 0,\r\n    pos: \"\",\r\n    eM: \"\",\r\n    pPic: \"\",\r\n    conn: [],\r\n    front: \"\",\r\n    back: \"\",\r\n    status: false,\r\n    errors: {\r\n      fN: \"\",\r\n      lN: \"\",\r\n      cmp: \"\",\r\n      adr: \"\",\r\n      pNo: \"\",\r\n      wNo: \"\",\r\n      pos: \"\",\r\n      eM: \"\",\r\n    },\r\n  };\r\n\r\n  // Used for the state of the dialog\r\n  //if the user deletes or updates a profile the dialog popup will be triggered\r\n  const [open, setOpen] = React.useState(false);\r\n  const [valid, setValid] = useState(true);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [doc, setDoc] = useState(initState);\r\n\r\n  //Snackbar when the user profile is updated\r\n  const [snackbarUpdate, setSnackbarUpdate] = useState(false);\r\n\r\n  const handleClickUpdate = () => {\r\n    setSnackbarUpdate(true);\r\n  };\r\n\r\n  const closeSnackbarUpdate = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSnackbarUpdate(false);\r\n  };\r\n\r\n  // Snackbar when a user is deleted\r\n  const [snackbarDelete, setsnackbarDelete] = useState(false);\r\n\r\n  const handleClickDelete = () => {\r\n    setsnackbarDelete(true);\r\n  };\r\n\r\n  const closeSnackbarDelete = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setsnackbarDelete(false);\r\n  };\r\n\r\n  // Using persisted state for the component\r\n  useEffect(() => {\r\n    const profile = JSON.parse(localStorage.getItem(\"profile\"));\r\n    if (profile) {\r\n      setDoc({\r\n        ...doc,\r\n        fN: profile.fN || \"\",\r\n        lN: profile.lN || \"\",\r\n        cmp: profile.cmp || \"\",\r\n        adr: profile.adr || \"\",\r\n        pNo: profile.pNo || 0,\r\n        wNo: profile.wNo || 0,\r\n        pos: profile.pos || \"\",\r\n        eM: profile.eM || \"\",\r\n        conn: profile.conn || [],\r\n        pPic: profile.pPic || \"\",\r\n        front: profile.front || \"\",\r\n        back: profile.back || \"\",\r\n        status: profile.status || false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"profile\", JSON.stringify(props.conn_profile));\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    large: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n    },\r\n    tField: {\r\n      padding: 10,\r\n    },\r\n  }));\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, doc.errors);\r\n    if (id === \"pNo\" || id === \"wNo\") {\r\n      setDoc({ ...doc, errors, [id]: parseInt(value) });\r\n    }\r\n    setDoc({ ...doc, errors, [id]: value });\r\n  };\r\n\r\n  //Returns Snackbar when Updating a user from the profile through admin access\r\n  const handleUpdateSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbarUpdate}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackbarUpdate}\r\n        message=\"Profile Updated\"\r\n        action={\r\n          <React.Fragment>\r\n            {doc.fN} {doc.lN}\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackbarUpdate}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  //Returns Snackbar when deleteing a user from the table\r\n  const handleDeleteSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbarDelete}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackbarDelete}\r\n        message=\"The profile is Deleted from the list.\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackbarDelete}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setValid(validator.isErrorObjectEmpty(doc.errors)); //if the error state is empty then valid become true\r\n    // setDoc({ ...doc, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(doc)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(doc.errors);\r\n    // submit if the form is valid\r\n    handleClose();\r\n    if (isFormValid) {\r\n      handleClickUpdate();\r\n      setValid(true); // set the valid state to true since the form is valid\r\n      delete doc.errors; // delete error state from the final object.\r\n      var uid = props.match.params.id;\r\n      props.updateConnection(doc, uid);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const onDelete = (status) => {\r\n    handleClose();\r\n    handleClickDelete();\r\n    var uid = props.match.params.id;\r\n    if (status) {\r\n      // if the user is an admin it will delete the profile from the system\r\n      props.deleteUser(uid);\r\n      props.history.goBack();\r\n    } else {\r\n      // if the user is normal user it will remove the connectin list from their list.\r\n      props.deleteConnection(props.auth.uid, uid);\r\n      props.history.goBack();\r\n    }\r\n  };\r\n\r\n  const { admin_profile, auth } = props;\r\n  const classes = useStyles();\r\n  let admin = admin_profile.status;\r\n\r\n  // checks if the user has logged out or not\r\n  if (!auth.uid) return <Redirect to=\"/\" />;\r\n  // check if the email is verified or not\r\n  if (!auth.emailVerified) return <Redirect to=\"/verify\" />;\r\n  // Check if the logged in user is an admin or not\r\n  if (admin_profile.isEmpty) {\r\n    admin = true;\r\n  }\r\n  return (\r\n    <form style={{ margin: \"auto\", width: \"80%\", padding: \"10px\" }}>\r\n      {snackbarUpdate ? handleUpdateSnackBar() : null}\r\n      {snackbarDelete ? handleDeleteSnackBar() : null}\r\n      <Card style={{ width: \"auto\" }}>\r\n        <Typography variant=\"h4\" style={{ padding: \"10px\" }}>\r\n          Profile\r\n        </Typography>\r\n        <hr />\r\n        <Grid container spcing={1}>\r\n          <Grid item xs={6}>\r\n            <CardContent>\r\n              <div style={{ marginBottom: \"10px\" }}>\r\n                <Avatar\r\n                  className={classes.large}\r\n                  alt={doc.fN}\r\n                  src={\r\n                    doc.pPic ||\r\n                    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                  }\r\n                  style={{ margin: \"auto\", border: \"2.5px solid #3f51b5\" }}\r\n                />\r\n              </div>\r\n              <div style={{ marginLeft: \"20px\" }}>\r\n                <Typography variant=\"h5\">\r\n                  Personal Information <hr />\r\n                </Typography>\r\n                <Paper\r\n                  elevation={3}\r\n                  style={{\r\n                    borderRight: \"3px solid #3f51b5\",\r\n                  }}\r\n                >\r\n                  <div>\r\n                    {admin ? (\r\n                      <div style={{ paddingTop: \"15px\" }}>\r\n                        <TextField\r\n                          error={doc.errors.fN === \"\" ? false : true}\r\n                          className={classes.tField}\r\n                          id=\"fN\"\r\n                          label=\"First Name\"\r\n                          value={doc.fN}\r\n                          helperText={valid ? null : doc.errors.fN}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                        />\r\n                        <TextField\r\n                          error={doc.errors.lN === \"\" ? false : true}\r\n                          className={classes.tField}\r\n                          id=\"lN\"\r\n                          label=\"Last Name\"\r\n                          value={doc.lN}\r\n                          helperText={valid ? null : doc.errors.lN}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                          <label style={{ fontWeight: \"bold\" }}>\r\n                            First Name -{\" \"}\r\n                          </label>\r\n                          {doc.fN}\r\n                        </Typography>\r\n                        <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                          <label style={{ fontWeight: \"bold\" }}>\r\n                            {\" \"}\r\n                            Last Name -{\" \"}\r\n                          </label>\r\n                          {doc.lN}\r\n                        </Typography>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div>\r\n                    {admin ? (\r\n                      <div>\r\n                        <TextField\r\n                          className={classes.tField}\r\n                          variant=\"outlined\"\r\n                          disabled\r\n                          value=\"+94\"\r\n                          style={{ width: \"12%\" }}\r\n                          label=\"Country\"\r\n                        />\r\n                        <TextField\r\n                          error={doc.errors.pNo === \"\" ? false : true}\r\n                          className={classes.tField}\r\n                          id=\"pNo\"\r\n                          label=\"Work Phone Number\"\r\n                          value={doc.pNo}\r\n                          helperText={valid ? null : doc.errors.pNo}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          style={{ float: \"left\" }}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                        <label style={{ fontWeight: \"bold\" }}>\r\n                          Personal Number -{\" \"}\r\n                        </label>\r\n                        {doc.pNo}\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div>\r\n                    {admin ? (\r\n                      <TextField\r\n                        error={doc.errors.eM === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"eM\"\r\n                        label=\"E-Mail\"\r\n                        value={doc.eM}\r\n                        helperText={valid ? null : doc.errors.eM}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ width: \"95%\" }}\r\n                      />\r\n                    ) : (\r\n                      <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                        <label style={{ fontWeight: \"bold\" }}>E-Mail - </label>\r\n                        {doc.eM}\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n                </Paper>\r\n                <Typography variant=\"h5\" style={{ marginTop: \"10px\" }}>\r\n                  Work Information <hr />\r\n                </Typography>\r\n                <Paper\r\n                  elevation={3}\r\n                  style={{\r\n                    borderRight: \"3px solid #3f51b5\",\r\n                  }}\r\n                >\r\n                  {admin ? (\r\n                    <div style={{ paddingTop: \"15px\" }}>\r\n                      <TextField\r\n                        error={doc.errors.cmp === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"cmp\"\r\n                        label=\"Company\"\r\n                        value={doc.cmp}\r\n                        helperText={valid ? null : doc.errors.cmp}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.pos === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"pos\"\r\n                        label=\"Position\"\r\n                        value={doc.pos}\r\n                        helperText={valid ? null : doc.errors.pos}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <Typography variant=\"body1\" style={{ padding: \"10px\" }}>\r\n                      <label style={{ fontWeight: \"bold\" }}>Company - </label>\r\n                      {doc.cmp}\r\n\r\n                      <label style={{ fontWeight: \"bold\", marginLeft: \"15px\" }}>\r\n                        {\" \"}\r\n                        Position -{\" \"}\r\n                      </label>\r\n                      {doc.pos}\r\n                    </Typography>\r\n                  )}\r\n                  {admin ? (\r\n                    <div>\r\n                      <TextField\r\n                        className={classes.tField}\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value=\"+94\"\r\n                        style={{ width: \"12%\" }}\r\n                        label=\"Country\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.wNo === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"wNo\"\r\n                        label=\"Work Phone Number\"\r\n                        value={doc.wNo}\r\n                        helperText={valid ? null : doc.errors.wNo}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ float: \"left\" }}\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <Typography\r\n                      id=\"adr\"\r\n                      variant=\"body1\"\r\n                      style={{ padding: \"10px\" }}\r\n                    >\r\n                      <label style={{ fontWeight: \"bold\" }}>\r\n                        Work Number -{\" \"}\r\n                      </label>\r\n                      {doc.wNo}\r\n                    </Typography>\r\n                  )}\r\n                  <div>\r\n                    {admin ? (\r\n                      <div>\r\n                        <TextField\r\n                          error={doc.errors.adr === \"\" ? false : true}\r\n                          className={classes.tField}\r\n                          id=\"adr\"\r\n                          label=\"Address\"\r\n                          value={doc.adr}\r\n                          helperText={valid ? null : doc.errors.adr}\r\n                          onChange={handleChange}\r\n                          variant=\"outlined\"\r\n                          style={{ width: \"95%\" }}\r\n                        />\r\n                      </div>\r\n                    ) : (\r\n                      <Typography\r\n                        id=\"adr\"\r\n                        variant=\"body1\"\r\n                        style={{ padding: \"10px\" }}\r\n                      >\r\n                        <label style={{ fontWeight: \"bold\" }}>\r\n                          {\" \"}\r\n                          Address -{\" \"}\r\n                        </label>\r\n                        {doc.adr}\r\n                      </Typography>\r\n                    )}\r\n                  </div>\r\n                </Paper>\r\n              </div>\r\n            </CardContent>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <div style={{ margin: \"50px\" }}>\r\n              <div align=\"center\">\r\n                <Typography variant=\"h6\" style={{ padding: \"10px\" }}>\r\n                  Card Images\r\n                </Typography>\r\n              </div>\r\n              <div align=\"center\">\r\n                <Paper elevation={3} style={{ width: \"75%\", padding: \"10xp\" }}>\r\n                  <Typography variant=\"body1\">Front View</Typography>\r\n                  <img\r\n                    src={\r\n                      doc.front ||\r\n                      \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                    }\r\n                    height=\"200\"\r\n                    width=\"320\"\r\n                    alt=\"Card Front View\"\r\n                    style={{ border: \"2.5px solid #3f51b5\" }}\r\n                  />\r\n                </Paper>\r\n                <Paper elevation={3} style={{ width: \"75%\", padding: \"10xp\" }}>\r\n                  <Typography variant=\"body1\">Back View</Typography>\r\n\r\n                  <img\r\n                    src={\r\n                      doc.back ||\r\n                      \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                    }\r\n                    height=\"200\"\r\n                    width=\"320\"\r\n                    alt=\"Card Front View\"\r\n                    style={{ border: \"2.5px solid #3f51b5\" }}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div align=\"center\" style={{ margin: \"10px\" }}>\r\n            {admin ? (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleSubmit}\r\n                style={{ margin: \"5px\" }}\r\n              >\r\n                Update\r\n              </Button>\r\n            ) : null}\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n              style={{ margin: \"5px\" }}\r\n            >\r\n              Delete\r\n            </Button>\r\n            <Dialog\r\n              open={open}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              onClose={handleClose}\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {\"Delete Connection\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  Are you sure that you want to delete {doc.fN} {doc.lN} from\r\n                  your list of connection?\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  No\r\n                </Button>\r\n                <Button onClick={(e) => onDelete(admin)} color=\"primary\">\r\n                  Yes\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </div>\r\n        </Grid>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  //for id receive from selecting an item from the list\r\n  const id = ownProps.match.params.id;\r\n  const profiles = state.firestore.data.user; // check with the id values of the documents in the firestore\r\n  var profile = profiles ? profiles[id] : null; // and when the value has a match pass that document as an object\r\n  if (profile !== null && profile !== undefined) {\r\n    localStorage.setItem(\"profile\", JSON.stringify(profile));\r\n  }\r\n  if (profile === null) {\r\n    profile = JSON.parse(localStorage.getItem(\"profile\"));\r\n  }\r\n  return {\r\n    conn_profile: profile,\r\n    auth: state.firebase.auth,\r\n    admin_profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateConnection: (profile, id) => dispatch(updateConnection(profile, id)),\r\n    deleteConnection: (uid, id) => dispatch(deleteConnection(uid, id)),\r\n    deleteUser: (uid) => dispatch(deleteUser(uid)),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: \"user\" }])\r\n)(ViewConnection);\r\n","export const createProfile = (profile) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    //make async call to database\r\n    const firestore = firebase.firestore();\r\n    const id = getState().firebase.auth.uid.toString();\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(id)\r\n      .set({\r\n        // fields and values to be added in the database\r\n        ...profile,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"CREATE_PROFILE\", profile });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"CREATE_PROFILE_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateProfile = (profile) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    //make async call to database\r\n    const firestore = firebase.firestore();\r\n    const id = getState().firebase.auth.uid.toString();\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(id)\r\n      .update({\r\n        // fields and values to be added in the database\r\n        ...profile,\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"UPDATE_PROFILE\", profile });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"UPDATE_PROFILE_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n\r\nexport const updateEmail = (credentials) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const mail = getState().firebase.auth.email.toString();\r\n    const user = firebase.auth().currentUser;\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      mail,\r\n      credentials.password\r\n    );\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(function (userCredential) {\r\n        userCredential.user\r\n          .updateEmail(credentials.email)\r\n          .then(() => {\r\n            dispatch({ type: \"UPDATE_PROFILE\" });\r\n          })\r\n          .catch((e) => {\r\n            dispatch({ type: \"UPDATE_PROFILE_ERROR\", e });\r\n          });\r\n      });\r\n  };\r\n};\r\n\r\nexport const changePwd = (credentials) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const mail = getState().firebase.auth.email.toString();\r\n    const user = firebase.auth().currentUser;\r\n\r\n    const credential = firebase.auth.EmailAuthProvider.credential(\r\n      mail,\r\n      credentials.password\r\n    );\r\n\r\n    user\r\n      .reauthenticateWithCredential(credential)\r\n      .then(function (userCredential) {\r\n        userCredential.user\r\n          .updatePassword(credentials.pwd)\r\n          .then(() => {\r\n            dispatch({ type: \"UPDATE_PROFILE\" });\r\n          })\r\n          .catch((e) => {\r\n            dispatch({ type: \"UPDATE_PROFILE_ERROR\", e });\r\n          });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteConnection = (uid, id) => {\r\n  return (dispatch, getState, { firebase }) => {\r\n    const firestore = firebase.firestore();\r\n    firestore\r\n      .collection(\"user\")\r\n      .doc(uid)\r\n      .update({\r\n        conn: firebase.firestore.FieldValue.arrayRemove(id),\r\n      })\r\n      .then(() => {\r\n        dispatch({ type: \"DELETE_PROFILE\" });\r\n      })\r\n      .catch((e) => {\r\n        dispatch({ type: \"DELETE_PROFILE_ERROR\", e });\r\n      });\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { login, resetPassword } from \"../../store/actions/authAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as validator from \"./Validation\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Login(props) {\r\n  const initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n\r\n  const [state, setState] = useState(initState);\r\n  const [open, setOpen] = useState(false);\r\n  const [mail, setMail] = useState(\"\");\r\n\r\n  //Open Popup Dialog\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  //Close Popup Dialog\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleForgotPwd = (e) => {\r\n    props.resetPassword(mail);\r\n  };\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, state.errors);\r\n    setState({ ...state, errors, [id]: value });\r\n  };\r\n\r\n  //set state for Login Form\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setState({ ...state, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  //set state for forgot password\r\n  const handleMail = (e) => {\r\n    setMail({ ...mail, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(state)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(state.errors);\r\n    // submit if the form is valid\r\n\r\n    if (isFormValid) {\r\n      props.login(state);\r\n    } else {\r\n      window.alert(\"Invalid Email or Password. Try again!\");\r\n    }\r\n  };\r\n  const { authError, auth } = props;\r\n  if (!auth.isEmpty) return <Redirect to=\"/\" />;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <hr />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {state.errors.email}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {state.errors.password}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\">\r\n              Login\r\n            </Button>\r\n            <div>\r\n              <Typography variant=\"body2\" color=\"secondary\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </Typography>\r\n            </div>\r\n            <br />\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <div align=\"center\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={handleClickOpen}\r\n                  >\r\n                    Forgot Password?\r\n                  </Button>\r\n                </div>\r\n                <Dialog\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"form-dialog-title\"\r\n                >\r\n                  <DialogTitle id=\"form-dialog-title\">\r\n                    Re-set Password\r\n                  </DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      To reset your password, please type in your email address\r\n                      which was used for the registration\r\n                    </DialogContentText>\r\n                    <TextField\r\n                      autoFocus\r\n                      margin=\"dense\"\r\n                      id=\"mail\"\r\n                      label=\"Email Address\"\r\n                      type=\"email\"\r\n                      fullWidth\r\n                      onChange={handleMail}\r\n                    />\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                      Cancel\r\n                    </Button>\r\n                    <Button onClick={handleForgotPwd} color=\"primary\">\r\n                      Send\r\n                    </Button>\r\n                  </DialogActions>\r\n                </Dialog>\r\n              </Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    login: (creds) => dispatch(login(creds)),\r\n    resetPassword: (email) => dispatch(resetPassword(email)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../store/actions/authAction\";\r\nimport * as validator from \"./Validation\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  CardContent,\r\n  Card,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Register(props) {\r\n  const initState = {\r\n    eM: \"\",\r\n    pwd: \"\",\r\n    repwd: \"\",\r\n    errors: {\r\n      pwd: \"\",\r\n      eM: \"\",\r\n      repwd: \"\",\r\n    },\r\n  };\r\n\r\n  const [state, setState] = useState(initState);\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, state.errors);\r\n    setState({ ...state, errors, [id]: value });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setState({ ...state, [id]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(state)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(state.errors);\r\n    // submit if the form is valid\r\n    if (isFormValid && state.repwd === state.pwd) {\r\n      props.register(state);\r\n      props.history.push(state, \"/verify\"); // After the registration is completed, create page will be loaded.\r\n    } else {\r\n    }\r\n  };\r\n  const { auth, authError } = props;\r\n  if (auth.uid) return <Redirect to=\"/create\" />;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form onSubmit={handleSubmit} noValidate>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Register\r\n            </Typography>\r\n            <hr />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              id=\"eM\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {state.errors.eM}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"pwd\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {state.errors.pwd}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"password\"\r\n              label=\"Re-Enter Password\"\r\n              type=\"password\"\r\n              id=\"repwd\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {state.errors.repwd}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Register\r\n            </Button>\r\n\r\n            <div>\r\n              <Typography variant=\"body2\" color=\"secondary\">\r\n                {authError ? <p> {authError} </p> : null}\r\n                {state.repwd === state.pwd ? null : (\r\n                  <p>Re-entered Password must be same as the Password!.</p>\r\n                )}\r\n              </Typography>\r\n            </div>\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.regError,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (newUser) => dispatch(register(newUser)),\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createProfile } from \"../../store/actions/profileAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport * as validator from \"../auth/Validation\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n  Grid,\r\n  Avatar,\r\n  Grow,\r\n} from \"@material-ui/core\";\r\n\r\nfunction CreateProfile(props) {\r\n  const initState = {\r\n    fN: \"\",\r\n    lN: \"\",\r\n    cmp: \"\",\r\n    adr: \"\",\r\n    pNo: \"\",\r\n    wNo: \"\",\r\n    pos: \"\",\r\n    eM: \"\",\r\n    conn: [],\r\n    pPic: \"\",\r\n    front: \"\",\r\n    back: \"\",\r\n    status: false,\r\n    errors: {\r\n      fN: \"\",\r\n      lN: \"\",\r\n      cmp: \"\",\r\n      adr: \"\",\r\n      pNo: \"\",\r\n      wNo: \"\",\r\n      pos: \"\",\r\n      eM: \"\",\r\n    },\r\n  };\r\n\r\n  const [valid, setValid] = useState(true);\r\n\r\n  //state for snackbar when uploading images\r\n  const [imageUpload, setImageUpload] = useState(false);\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  //opening popup Dialog\r\n  const handleClickOpen = (e) => {\r\n    setOpen(true);\r\n  };\r\n\r\n  //closing popup Dialog\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [snackbar, setSnackbar] = useState(false);\r\n\r\n  //opening snackbar\r\n  const handleClick = () => {\r\n    setSnackbar(true);\r\n  };\r\n\r\n  //closing snackbar\r\n  const closeSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  const [doc, setDoc] = useState(initState);\r\n\r\n  //persisted state\r\n  useEffect(() => {\r\n    const profile = JSON.parse(localStorage.getItem(\"create\"));\r\n    if (profile) {\r\n      setDoc({\r\n        ...doc,\r\n        fN: \"\",\r\n        lN: \"\",\r\n        cmp: \"\",\r\n        adr: \"\",\r\n        pNo: \"\",\r\n        wNo: \"\",\r\n        pos: \"\",\r\n        eM: \"\",\r\n        pPic: \"\",\r\n        conn: [],\r\n        front: \"\",\r\n        back: \"\",\r\n        status: false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.removeItem(\"create\");\r\n    localStorage.setItem(\"create\", JSON.stringify(props.profile));\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    large: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n    },\r\n    tField: {\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }));\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, doc.errors);\r\n    setDoc({ ...doc, errors, [id]: value });\r\n  };\r\n\r\n  //when an input field has an input or the existing values are modified\r\n  //this will be called an set the new values to the state\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setValid(validator.isErrorObjectEmpty(doc.errors)); //if the error state is empty then valid become true\r\n  };\r\n\r\n  // submiting the values to the back-end\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(doc)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(doc.errors);\r\n    // submit if the form is valid\r\n\r\n    handleClose();\r\n    if (isFormValid) {\r\n      console.log(doc);\r\n      handleClick();\r\n      setValid(true); // set the valid state to true since the form is valid\r\n      delete doc.errors; // delete error state from the final object.\r\n      props.createProfile(doc);\r\n      props.history.push(\"/\");\r\n    } else {\r\n      console.log(doc);\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  //called when an image is uploaded to the firebase storeage\r\n  const handleAfterUpload = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={imageUpload}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackBar}\r\n        message=\"Image is Uploading...\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n  //called when the user clicks on the create button\r\n  const handleSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbar}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackBar}\r\n        message=\"Your profile has been Created.\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n  //set the image selected for profile picture of the user\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({\r\n        ...doc,\r\n        pPic: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n\r\n  //set the image selected for front view of the card\r\n  const frontView = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({\r\n        ...doc,\r\n        front: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n\r\n  //set the image selected for back view of the card\r\n  const backView = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({\r\n        ...doc,\r\n        back: URL.createObjectURL(event.target.files[0]),\r\n      });\r\n    }\r\n  };\r\n  let id = props.auth.uid;\r\n  const ref = firebase.storage().ref(`${id}`);\r\n\r\n  //upload the image selected for the front view of the card\r\n  const frontUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"front\").files[0];\r\n    try {\r\n      const name = \"front\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            front: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n\r\n  //upload the image selected for the back view of the card\r\n  const backUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"back\").files[0];\r\n    try {\r\n      const name = \"back\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            back: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n\r\n  //upload the image selected for the profile picture of the user\r\n  const pPicUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"pPic\").files[0];\r\n    try {\r\n      const name = \"pPic\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            pPic: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n\r\n  function handleDialog() {\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\" color=\"black\">\r\n          {\"Create Profile\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            By clicking yes you will create your profile in the E-Card System.\r\n            You will be redirected to your account after clicking \"Yes\". If\r\n            there are any changes to be done click \"No\".\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  const { auth, profile } = props;\r\n  const classes = useStyles();\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  if (!auth.emailVerified) return <Redirect to=\"/verify\" />;\r\n  if (profile.isLoaded && !profile.isEmpty) return <Redirect to=\"/\" />;\r\n  const checked = true;\r\n  return (\r\n    <form\r\n      style={{\r\n        margin: \"auto\",\r\n        width: \"80%\",\r\n        padding: \"10px\",\r\n        position: \"relative\",\r\n      }}\r\n    >\r\n      {snackbar ? handleSnackBar() : null}\r\n      {imageUpload ? handleAfterUpload() : null}\r\n      <Card style={{ width: \"auto\" }}>\r\n        <Typography variant=\"h4\" style={{ padding: \"10px\" }}>\r\n          Create Profile\r\n        </Typography>\r\n        <hr />\r\n        <Grid container spcing={1}>\r\n          <Grow\r\n            in={checked}\r\n            style={{ transformOrigin: \"0 0 0\" }}\r\n            {...(checked ? { timeout: 1000 } : {})}\r\n          >\r\n            <Grid item xs={6}>\r\n              <CardContent>\r\n                <div style={{ position: \"relative\" }} align=\"center\">\r\n                  <Avatar\r\n                    className={classes.large}\r\n                    alt={doc.fN}\r\n                    src={\r\n                      doc.pPic ||\r\n                      \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                    }\r\n                    style={{ margin: \"10px\" }}\r\n                  />\r\n                  <div style={{ margin: \"10px\" }}>\r\n                    <div>\r\n                      <input\r\n                        id=\"pPic\"\r\n                        onChange={onImageChange}\r\n                        style={{ whiteSpace: \"normal\", wordWrap: \"break-word\" }}\r\n                        accept=\"image/x-jpeg,image/x-jpg\"\r\n                        className={classes.input}\r\n                        multiple\r\n                        type=\"file\"\r\n                      />\r\n                      <label htmlFor=\"pPic\">\r\n                        <Button\r\n                          component=\"span\"\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          style={{ margin: \"10px\" }}\r\n                        >\r\n                          Select\r\n                        </Button>\r\n                      </label>\r\n                      <Button\r\n                        component=\"span\"\r\n                        onClick={pPicUpload}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Upload\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div style={{ clear: \"left\", position: \"relative\" }}>\r\n                  <Typography variant=\"h5\">\r\n                    Personal Information <hr />\r\n                  </Typography>\r\n                  <div>\r\n                    {/* Material UI built in error message is used in this textfield */}\r\n                    {/* vlaid is a state object that returns true or false on validation*/}\r\n                    {/* {First Name} */}\r\n                    <TextField\r\n                      error={doc.errors.fN === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"fN\"\r\n                      label=\"First Name\"\r\n                      value={doc.fN}\r\n                      helperText={valid ? null : doc.errors.fN}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    {/* {Last Name} */}\r\n                    <TextField\r\n                      error={doc.errors.lN === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"lN\"\r\n                      label=\"Last Name\"\r\n                      value={doc.lN}\r\n                      helperText={valid ? null : doc.errors.lN}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div style={{ clear: \"left\" }}>\r\n                    {/* {Personal Phone Number} */}\r\n                    <TextField\r\n                      className={classes.tField}\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                      value=\"+94\"\r\n                      style={{ width: \"12%\" }}\r\n                      label=\"Country\"\r\n                    />\r\n                    <TextField\r\n                      error={doc.errors.pNo === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"pNo\"\r\n                      label=\"Personal Number\"\r\n                      value={doc.pNo}\r\n                      helperText={valid ? null : doc.errors.pNo}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ float: \"left\" }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    {/* {Email} */}\r\n                    <TextField\r\n                      error={doc.errors.eM === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"eM\"\r\n                      label=\"E-Mail\"\r\n                      value={doc.eM}\r\n                      helperText={valid ? null : doc.errors.eM}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"91%\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <Typography variant=\"h5\" style={{ padding: \"10px\" }}>\r\n                    Work Information\r\n                    <hr />\r\n                  </Typography>\r\n                  <div>\r\n                    {/* {Company} */}\r\n                    <TextField\r\n                      error={doc.errors.cmp === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"cmp\"\r\n                      label=\"Company\"\r\n                      value={doc.cmp}\r\n                      helperText={valid ? null : doc.errors.cmp}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                    {/* {Position} */}\r\n                    <TextField\r\n                      error={doc.errors.pos === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"pos\"\r\n                      label=\"Position\"\r\n                      value={doc.pos}\r\n                      helperText={valid ? null : doc.errors.pos}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    {/* {Work Number} */}\r\n                    <TextField\r\n                      className={classes.tField}\r\n                      variant=\"outlined\"\r\n                      disabled\r\n                      value=\"+94\"\r\n                      style={{ width: \"12%\" }}\r\n                      label=\"Country\"\r\n                    />\r\n                    <TextField\r\n                      error={doc.errors.wNo === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"wNo\"\r\n                      label=\"Work Phone Number\"\r\n                      value={doc.wNo}\r\n                      helperText={valid ? null : doc.errors.wNo}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ float: \"left\" }}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    {/* {Work Address} */}\r\n                    <TextField\r\n                      error={doc.errors.adr === \"\" ? false : true}\r\n                      className={classes.tField}\r\n                      id=\"adr\"\r\n                      label=\"Address\"\r\n                      value={doc.adr}\r\n                      helperText={valid ? null : doc.errors.adr}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      style={{ width: \"91%\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grow>\r\n          <Grow\r\n            in={checked}\r\n            style={{ transformOrigin: \"0 0 0\" }}\r\n            {...(checked ? { timeout: 1000 } : {})}\r\n          >\r\n            <Grid item xs={6}>\r\n              <Typography\r\n                variant=\"h5\"\r\n                style={{ padding: \"10px\" }}\r\n                align=\"center\"\r\n              >\r\n                Card Images\r\n              </Typography>\r\n              <div\r\n                align=\"center\"\r\n                style={{\r\n                  paddingTop: \"15px\",\r\n                  margin: \"auto\",\r\n                  width: \"65%\",\r\n                }}\r\n              >\r\n                <Card>\r\n                  <div style={{ position: \"relative\", margin: \"5px\" }}>\r\n                    <Typography variant=\"body1\">Front View</Typography>\r\n                    <img\r\n                      src={\r\n                        doc.front ||\r\n                        \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                      }\r\n                      height=\"200\"\r\n                      width=\"320\"\r\n                      alt=\"Card Front View\"\r\n                      style={{ position: \"relative\" }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        clear: \"right\",\r\n                        marginBottom: \"10px\",\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <input\r\n                          id=\"front\"\r\n                          onChange={frontView}\r\n                          style={{\r\n                            whiteSpace: \"normal\",\r\n                            wordWrap: \"break-word\",\r\n                          }}\r\n                          accept=\"image/x-jpeg,image/x-jpg\"\r\n                          className={classes.input}\r\n                          multiple\r\n                          type=\"file\"\r\n                        />\r\n                        <label htmlFor=\"front\">\r\n                          <Button\r\n                            component=\"span\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ margin: \"10px\" }}\r\n                          >\r\n                            Select\r\n                          </Button>\r\n                        </label>\r\n                        <Button\r\n                          component=\"span\"\r\n                          onClick={frontUpload}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                        >\r\n                          Upload\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      position: \"relative\",\r\n                      margin: \"5px\",\r\n                      clear: \"right\",\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body1\">Back View</Typography>\r\n                    <img\r\n                      src={\r\n                        doc.back ||\r\n                        \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                      }\r\n                      height=\"200\"\r\n                      width=\"320\"\r\n                      alt=\"Card Back View\"\r\n                      style={{ position: \"relative\" }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        marginLeft: \"10px\",\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        <input\r\n                          id=\"back\"\r\n                          onChange={backView}\r\n                          style={{\r\n                            whiteSpace: \"normal\",\r\n                            wordWrap: \"break-word\",\r\n                          }}\r\n                          accept=\"image/x-jpeg,image/x-jpg\"\r\n                          className={classes.input}\r\n                          multiple\r\n                          type=\"file\"\r\n                        />\r\n                        <label htmlFor=\"back\">\r\n                          <Button\r\n                            component=\"span\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ margin: \"10px\" }}\r\n                          >\r\n                            Select\r\n                          </Button>\r\n                        </label>\r\n                        <Button\r\n                          component=\"span\"\r\n                          onClick={backUpload}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                        >\r\n                          Upload\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  clear: \"left\",\r\n                  margin: \"auto\",\r\n                  position: \"relative\",\r\n                  width: \"300px\",\r\n                  marginTop: \"50px\",\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\">\r\n                  <b>Note</b>: You need to upload each images individually by\r\n                  clicking on the \"UPLOAD\" Button under the images.\r\n                </Typography>\r\n              </div>\r\n            </Grid>\r\n          </Grow>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <div align=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              style={{ margin: 10 }}\r\n              onClick={(e) => handleClickOpen()}\r\n            >\r\n              Create Profile\r\n            </Button>\r\n            {open ? handleDialog() : null}\r\n          </div>\r\n          <div style={{ clear: \"right\" }}></div>\r\n        </Grid>\r\n      </Card>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile, //Get the current user profile\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    createProfile: (profile) => dispatch(createProfile(profile)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProfile);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/storage\";\r\nimport { updateProfile } from \"../../store/actions/adminAction\";\r\nimport { deleteUser } from \"../../store/actions/adminAction\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport {\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Card,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n  Grid,\r\n  Avatar,\r\n  CardContent,\r\n  Grow,\r\n} from \"@material-ui/core\";\r\nimport * as validator from \"../auth/Validation\";\r\n\r\nfunction UserProfile(props) {\r\n  const initState = {\r\n    fN: \"\",\r\n    lN: \"\",\r\n    cmp: \"\",\r\n    adr: \"\",\r\n    pNo: 0,\r\n    wNo: 0,\r\n    pos: \"\",\r\n    eM: \"\",\r\n    pPic: \"\",\r\n    front: \"\",\r\n    back: \"\",\r\n    status: false,\r\n    errors: {\r\n      fN: \"\",\r\n      lN: \"\",\r\n      cmp: \"\",\r\n      adr: \"\",\r\n      pNo: \"\",\r\n      wNo: \"\",\r\n      pos: \"\",\r\n      eM: \"\",\r\n    },\r\n  };\r\n\r\n  const [doc, setDoc] = useState(initState);\r\n\r\n  const [imageUpload, setImageUpload] = useState(false);\r\n\r\n  const [openDel, setOpenDel] = useState(false);\r\n\r\n  const handleDelOpen = () => {\r\n    setOpenDel(true);\r\n  };\r\n\r\n  const handleDelClose = () => {\r\n    setOpenDel(false);\r\n  };\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  useEffect(() => {\r\n    const profile = JSON.parse(localStorage.getItem(\"current_user_profile\"));\r\n    if (profile) {\r\n      setDoc({\r\n        ...doc,\r\n        fN: profile.fN || \"\",\r\n        lN: profile.lN || \"\",\r\n        cmp: profile.cmp || \"\",\r\n        adr: profile.adr || \"\",\r\n        pNo: parseInt(profile.pNo) || 0,\r\n        wNo: parseInt(profile.wNo) || 0,\r\n        pos: profile.pos || \"\",\r\n        eM: profile.eM || \"\",\r\n        pPic: profile.pPic || \"\",\r\n        front: profile.front || \"\",\r\n        back: profile.back || \"\",\r\n        conn: profile.conn || [],\r\n        status: profile.status || false,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"current_user_profile\", JSON.stringify(props.profile));\r\n  });\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    large: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n    },\r\n    tField: {\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }));\r\n\r\n  const [valid, setValid] = useState(true);\r\n\r\n  const [snackbar, setSnackbar] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSnackbar(true);\r\n  };\r\n\r\n  const closeSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, doc.errors);\r\n    setDoc({ ...doc, errors, [id]: value });\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setValid(validator.isErrorObjectEmpty(doc.errors)); //if the error state is empty then valid become true\r\n    // setDoc({ ...doc, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  //Delete the current user profile\r\n  const handleDel = (e) => {\r\n    handleDelClose();\r\n    props.deleteUser(props.auth.uid);\r\n    props.history.push(\"/login\");\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleClose();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(doc)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(doc.errors);\r\n    // submit if the form is valid\r\n    if (isFormValid) {\r\n      setValid(true); // set the valid state to true since the form is valid\r\n      delete doc.errors; // delete error state from the final object.\r\n      props.updateProfile(doc);\r\n      handleClick();\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  };\r\n\r\n  const handleAfterUpload = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={imageUpload}\r\n        autoHideDuration={3000}\r\n        onClose={closeSnackBar}\r\n        message=\"Image Uploading Wait...\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n  //Returns Snackbar when Updating current user profile\r\n  const handleSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbar}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackBar}\r\n        message=\"Your profile is Updated.\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  //Set selected image to profile picture\r\n  const onImageChange = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({ ...doc, pPic: URL.createObjectURL(event.target.files[0]) });\r\n    }\r\n  };\r\n\r\n  //Set selected image to Card's front view picture\r\n  const backView = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({ ...doc, back: URL.createObjectURL(event.target.files[0]) });\r\n    }\r\n  };\r\n  //Set selected image to Card's back view picture\r\n  const frontView = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setDoc({ ...doc, front: URL.createObjectURL(event.target.files[0]) });\r\n    }\r\n  };\r\n\r\n  let id = props.auth.uid;\r\n  const ref = firebase.storage().ref(`${id}`);\r\n\r\n  const frontUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"front\").files[0];\r\n    try {\r\n      const name = \"front\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            front: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n  const backUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"back\").files[0];\r\n    try {\r\n      const name = \"back\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            back: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n\r\n  const pPicUpload = (e) => {\r\n    setImageUpload(true);\r\n    const file = document.getElementById(\"pPic\").files[0];\r\n    try {\r\n      const name = \"pPic\";\r\n      const metadata = {\r\n        contentType: file.type,\r\n      };\r\n      const task = ref.child(name).put(file, metadata);\r\n      task\r\n        .then((snapshot) => snapshot.ref.getDownloadURL())\r\n        .then((url) => {\r\n          setDoc({\r\n            ...doc,\r\n            pPic: url,\r\n          });\r\n        })\r\n        .then(() => {\r\n          setImageUpload(false);\r\n        })\r\n        .catch(console.error);\r\n    } catch (err) {\r\n      console.log(0);\r\n    }\r\n  };\r\n\r\n  function handleDelDialog() {\r\n    return (\r\n      <Dialog\r\n        open={openDel}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleDelClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\" color=\"black\">\r\n          {\"Deleting Your Profile\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure that you want to Delete your current profile? After\r\n            clicking yes you will be redirected to Create Profile.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleDelClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={handleDel} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  function handleDialog() {\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\" color=\"black\">\r\n          {\"Updating Your Profile\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure that you want to update your current profile?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={handleSubmit} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  function renderProfile(checked) {\r\n    return (\r\n      <form style={{ margin: \"auto\", width: \"80%\", padding: \"10px\" }}>\r\n        {snackbar ? handleSnackBar() : null}\r\n        {imageUpload ? handleAfterUpload() : null}\r\n        <Card style={{ width: \"auto\" }}>\r\n          <Typography variant=\"h4\" style={{ padding: \"10px\" }}>\r\n            Your Profile\r\n          </Typography>\r\n          <hr />\r\n          <Grid container spcing={1}>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <div style={{ position: \"relative\" }} align=\"center\">\r\n                    <Avatar\r\n                      className={classes.large}\r\n                      alt={doc.fN}\r\n                      src={\r\n                        doc.pPic ||\r\n                        \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\r\n                      }\r\n                      style={{ margin: \"10px\" }}\r\n                    />\r\n                    <div style={{ margin: \"10px\" }}>\r\n                      <div>\r\n                        <input\r\n                          id=\"pPic\"\r\n                          onChange={onImageChange}\r\n                          style={{\r\n                            whiteSpace: \"normal\",\r\n                            wordWrap: \"break-word\",\r\n                          }}\r\n                          accept=\"image/x-jpeg,image/x-jpg\"\r\n                          className={classes.input}\r\n                          multiple\r\n                          type=\"file\"\r\n                        />\r\n                        <label htmlFor=\"pPic\">\r\n                          <Button\r\n                            component=\"span\"\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            style={{ margin: \"10px\" }}\r\n                          >\r\n                            Select\r\n                          </Button>\r\n                        </label>\r\n                        <Button\r\n                          component=\"span\"\r\n                          onClick={pPicUpload}\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                        >\r\n                          Upload\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div style={{ clear: \"left\", position: \"relative\" }}>\r\n                    <Typography variant=\"h5\">\r\n                      Personal Information <hr />\r\n                    </Typography>\r\n                    <div>\r\n                      {/* Material UI built in error message is used in this textfield */}\r\n                      {/* vlaid is a state object that returns true or false on validation*/}\r\n                      <TextField\r\n                        error={doc.errors.fN === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"fN\"\r\n                        label=\"First Name\"\r\n                        value={doc.fN}\r\n                        helperText={valid ? null : doc.errors.fN}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.lN === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"lN\"\r\n                        label=\"Last Name\"\r\n                        value={doc.lN}\r\n                        helperText={valid ? null : doc.errors.lN}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </div>\r\n                    <div style={{ clear: \"left\" }}>\r\n                      <TextField\r\n                        className={classes.tField}\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value=\"+94\"\r\n                        style={{ width: \"12%\" }}\r\n                        label=\"Country\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.pNo === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"pNo\"\r\n                        label=\"Personal Number\"\r\n                        value={doc.pNo}\r\n                        helperText={valid ? null : doc.errors.pNo}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ float: \"left\" }}\r\n                      />\r\n                    </div>\r\n                    <div style={{ clear: \"left\" }}>\r\n                      <TextField\r\n                        error={doc.errors.eM === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"eM\"\r\n                        label=\"E-Mail\"\r\n                        value={doc.eM}\r\n                        helperText={valid ? null : doc.errors.eM}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ width: \"91%\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <Typography variant=\"h5\" style={{ padding: \"10px\" }}>\r\n                      Work Information\r\n                      <hr />\r\n                    </Typography>\r\n                    <div>\r\n                      <TextField\r\n                        error={doc.errors.cmp === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"cmp\"\r\n                        label=\"Company\"\r\n                        value={doc.cmp}\r\n                        helperText={valid ? null : doc.errors.cmp}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.pos === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"pos\"\r\n                        label=\"Position\"\r\n                        value={doc.pos}\r\n                        helperText={valid ? null : doc.errors.pos}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <TextField\r\n                        className={classes.tField}\r\n                        variant=\"outlined\"\r\n                        disabled\r\n                        value=\"+94\"\r\n                        style={{ width: \"12%\" }}\r\n                        label=\"Country\"\r\n                      />\r\n                      <TextField\r\n                        error={doc.errors.wNo === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"wNo\"\r\n                        label=\"Work Phone Number\"\r\n                        value={doc.wNo}\r\n                        helperText={valid ? null : doc.errors.wNo}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ float: \"left\" }}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <TextField\r\n                        error={doc.errors.adr === \"\" ? false : true}\r\n                        className={classes.tField}\r\n                        id=\"adr\"\r\n                        label=\"Address\"\r\n                        value={doc.adr}\r\n                        helperText={valid ? null : doc.errors.adr}\r\n                        onChange={handleChange}\r\n                        variant=\"outlined\"\r\n                        style={{ width: \"91%\" }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Typography\r\n                  variant=\"h5\"\r\n                  style={{ padding: \"10px\" }}\r\n                  align=\"center\"\r\n                >\r\n                  Card Images\r\n                </Typography>\r\n                <div\r\n                  align=\"center\"\r\n                  style={{\r\n                    paddingTop: \"15px\",\r\n                    margin: \"auto\",\r\n                    width: \"65%\",\r\n                  }}\r\n                >\r\n                  <Card>\r\n                    <Typography variant=\"body1\">Front View</Typography>\r\n                    <div style={{ position: \"relative\", margin: \"5px\" }}>\r\n                      <img\r\n                        src={\r\n                          doc.front ||\r\n                          \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                        }\r\n                        height=\"200\"\r\n                        width=\"320\"\r\n                        alt=\"Card Front View\"\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          clear: \"right\",\r\n                          marginBottom: \"10px\",\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <input\r\n                            id=\"front\"\r\n                            onChange={frontView}\r\n                            style={{\r\n                              whiteSpace: \"normal\",\r\n                              wordWrap: \"break-word\",\r\n                            }}\r\n                            accept=\"image/x-jpeg,image/x-jpg\"\r\n                            className={classes.input}\r\n                            multiple\r\n                            type=\"file\"\r\n                          />\r\n                          <label htmlFor=\"front\">\r\n                            <Button\r\n                              component=\"span\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              style={{ margin: \"10px\" }}\r\n                            >\r\n                              Select\r\n                            </Button>\r\n                          </label>\r\n                          <Button\r\n                            component=\"span\"\r\n                            onClick={frontUpload}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        position: \"relative\",\r\n                        margin: \"5px\",\r\n                        clear: \"right\",\r\n                      }}\r\n                    >\r\n                      <Typography variant=\"body1\">Back View</Typography>\r\n                      <img\r\n                        src={\r\n                          doc.back ||\r\n                          \"https://www.generationsforpeace.org/wp-content/uploads/2018/03/empty.jpg\"\r\n                        }\r\n                        height=\"200\"\r\n                        width=\"320\"\r\n                        alt=\"Card Back View\"\r\n                      />\r\n                      <div\r\n                        style={{\r\n                          marginLeft: \"10px\",\r\n                        }}\r\n                      >\r\n                        <div>\r\n                          <input\r\n                            id=\"back\"\r\n                            onChange={backView}\r\n                            style={{\r\n                              whiteSpace: \"normal\",\r\n                              wordWrap: \"break-word\",\r\n                            }}\r\n                            accept=\"image/x-jpeg,image/x-jpg\"\r\n                            className={classes.input}\r\n                            multiple\r\n                            type=\"file\"\r\n                          />\r\n                          <label htmlFor=\"back\">\r\n                            <Button\r\n                              component=\"span\"\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              style={{ margin: \"10px\" }}\r\n                            >\r\n                              Select\r\n                            </Button>\r\n                          </label>\r\n                          <Button\r\n                            component=\"span\"\r\n                            onClick={backUpload}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                          >\r\n                            Upload\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </Card>\r\n                </div>\r\n                <div\r\n                  style={{\r\n                    clear: \"left\",\r\n                    position: \"relative\",\r\n                    margin: \"auto\",\r\n                    width: \"300px\",\r\n                    marginTop: \"50px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\">\r\n                    <b>Note</b>: You need to upload each images individually by\r\n                    clicking on the \"UPLOAD\" Button under the images.\r\n                  </Typography>\r\n                </div>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div align=\"center\">\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: 10 }}\r\n                onClick={(e) => handleClickOpen()}\r\n              >\r\n                Update\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: 10 }}\r\n                onClick={(e) => handleDelOpen()}\r\n              >\r\n                Delete\r\n              </Button>\r\n              {open ? handleDialog() : null}\r\n              {openDel ? handleDelDialog() : null}\r\n            </div>\r\n            <div style={{ clear: \"right\" }}></div>\r\n          </Grid>\r\n        </Card>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  const { auth, profile } = props;\r\n  const classes = useStyles();\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  if (profile.isLoaded && profile.isEmpty) return <Redirect to=\"/create\" />;\r\n  const profileView = doc === null ? <Redirect to=\"/\" /> : renderProfile(true);\r\n  if (profileView) {\r\n    return <div>{profileView}</div>;\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading Profile...</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //for id receive from selecting an item from the list\r\n  var curr_user = state.firebase.profile;\r\n\r\n  if (!curr_user.isEmpty) {\r\n    localStorage.setItem(\"current_user_profile\", JSON.stringify(curr_user));\r\n  }\r\n  if (curr_user.isEmpty) {\r\n    curr_user = JSON.parse(localStorage.getItem(\"current_user_profile\"));\r\n  }\r\n\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile: state.firebase.profile,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateProfile: (profile) => dispatch(updateProfile(profile)),\r\n    deleteUser: (uid) => dispatch(deleteUser(uid)),\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: \"user\" }])\r\n)(UserProfile);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { deleteUser } from \"../../store/actions/adminAction\";\r\n\r\nfunction getData(profiles) {\r\n  const rows = [];\r\n  if (profiles !== undefined) {\r\n    profiles.map((profile) => rows.push(profile));\r\n  }\r\n  return rows;\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"fN\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Full Name\",\r\n  },\r\n  { id: \"cmp\", numeric: true, disablePadding: false, label: \"Company\" },\r\n  { id: \"pos\", numeric: true, disablePadding: false, label: \"Position\" },\r\n  { id: \"pNo\", numeric: true, disablePadding: false, label: \"Personal Number\" },\r\n  {\r\n    id: \"eM\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"E-Mail\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow style={{ background: \"#3f51b5\" }}>\r\n        <TableCell>{\"\"}</TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n            style={{ color: \"white\" }}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n              style={{ color: \"white\" }}\r\n            >\r\n              <Typography>{headCell.label}</Typography>\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nfunction GridView(props) {\r\n  const { profiles } = props;\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(\"asc\");\r\n  const [orderBy, setOrderBy] = useState(\"fN\");\r\n  const [selected, setSelected] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [dense, setDense] = useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const [term, setTerm] = useState(\"\");\r\n  const [id, setID] = useState(\"fN\");\r\n\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [prof, setProf] = useState({});\r\n\r\n  const [snackbar, setSnackbar] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSnackbar(true);\r\n  };\r\n\r\n  const closeSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSnackbar(false);\r\n  };\r\n\r\n  const handleClickOpen = (prof) => {\r\n    setProf(prof);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  //Returns Snackbar when deleteing a user from the table\r\n  const handleSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbar}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackBar}\r\n        message=\"User Deleted\"\r\n        action={\r\n          <React.Fragment>\r\n            {prof.fN} {prof.lN}\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n  function handleID(e) {\r\n    setID(e.target.id);\r\n  }\r\n\r\n  // Set the text that will be used to search the table\r\n  function searchBar(e) {\r\n    setTerm(e.target.value);\r\n  }\r\n\r\n  // Search function that searches the table for a match\r\n  function searchingFor(term, type) {\r\n    return function (x) {\r\n      return x[type].toLowerCase().includes(term.toLowerCase()) || !term;\r\n    };\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n  const rows = getData(profiles)\r\n    .filter(searchingFor(term, id))\r\n    .map((person) => {\r\n      return person;\r\n    });\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const [item, setItem] = useState(\"First Name\");\r\n\r\n  const handleChange = (event) => {\r\n    setItem(event.target.value);\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n  const emptyRows =\r\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  function handleDialog(row) {\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Delete Connection\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Are you sure that you want to delete {row.fN} {row.lN} from your\r\n            list of connection?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            No\r\n          </Button>\r\n          <Button onClick={(e) => handleDelete(row.id)} color=\"primary\">\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n\r\n  function handleDelete(id) {\r\n    props.deleteUser(id);\r\n    handleClose();\r\n    handleClick();\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      {snackbar ? handleSnackBar() : null}\r\n      <Card className={classes.paper} variant=\"outlined\">\r\n        <div style={{ display: \"inline\", float: \"left\", margin: \"10px\" }}>\r\n          <Typography variant=\"h3\">Registered Users</Typography>\r\n        </div>\r\n        <div style={{ display: \"inline\", float: \"right\", margin: \"10px\" }}>\r\n          <TextField id=\"standard-basic\" label=\"Search\" onChange={searchBar} />\r\n          <div style={{ float: \"right\", marginLeft: \"5px\" }}>\r\n            <InputLabel id=\"demo-simple-select-label\">Search By</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={item}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem\r\n                id=\"fN\"\r\n                value={\"First Name\"}\r\n                onClick={(e) => handleID(e)}\r\n              >\r\n                First Name\r\n              </MenuItem>\r\n              <MenuItem\r\n                id=\"lN\"\r\n                value={\"Last Name\"}\r\n                onClick={(e) => handleID(e)}\r\n              >\r\n                Last Name\r\n              </MenuItem>\r\n              <MenuItem id=\"cmp\" value={\"Company\"} onClick={(e) => handleID(e)}>\r\n                Company\r\n              </MenuItem>\r\n            </Select>\r\n          </div>\r\n        </div>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              itemList={selected}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        <IconButton\r\n                          id={row.id}\r\n                          style={{\r\n                            backgroundColor: \"#3f51b5\",\r\n                            margin: \"5px\",\r\n                            color: \"white\",\r\n                          }}\r\n                          onClick={(e) => handleClickOpen(row)}\r\n                          size=\"small\"\r\n                        >\r\n                          <DeleteIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                        {open ? handleDialog(prof) : null}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        <Link\r\n                          to={\"/profile/\" + row.id}\r\n                          key={row.id}\r\n                          style={{ textDecoration: \"none\" }}\r\n                        >\r\n                          <Typography>{row.fN + \" \" + row.lN}</Typography>\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Typography>{row.cmp}</Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Typography>{row.pos}</Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Typography>94{row.pNo}</Typography>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Typography>{row.eM}</Typography>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Card>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={dense}\r\n            onChange={handleChangeDense}\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profiles: state.firestore.ordered.user, // get the  list of user from the firestore\r\n    auth: state.firebase.auth,\r\n    current_user: state.firebase.profile,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { deleteUser }),\r\n  firestoreConnect([{ collection: \"user\" }])\r\n)(GridView);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GridView from \"../admin/GridView\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  circlular: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Admin(props) {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n\r\n  const classes = useStyles();\r\n\r\n  const { profiles, auth, current_user } = props;\r\n\r\n  localStorage.removeItem(\"profile\");\r\n  localStorage.removeItem(\"create\");\r\n\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  // check if the email is verified or not\r\n  if (!auth.emailVerified) return <Redirect to=\"/verify\" />;\r\n\r\n  if (current_user.isLoaded && current_user.isEmpty)\r\n    return <Redirect to=\"/create\" />;\r\n\r\n  if (current_user.isLoaded && !current_user.status) return <Redirect to=\"/\" />;\r\n  const conn_list = [];\r\n  profiles &&\r\n    profiles.map((user) => {\r\n      return conn_list.push(user);\r\n    });\r\n\r\n  const checked = true;\r\n  if (profiles !== undefined && conn_list.length === profiles.length) {\r\n    return (\r\n      <Container style={{ marginTop: \"30px\" }}>\r\n        <div className={classes.root}>\r\n          <Grid container spacing={3}>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={12}>\r\n                <div style={{ width: \"80%\", margin: \"auto\" }}>\r\n                  <GridView profiles={conn_list} />\r\n                </div>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    );\r\n  } else {\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <Card />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    profiles: state.firestore.ordered.user, // get the  list of user from the firestore\r\n    auth: state.firebase.auth,\r\n    current_user: state.firebase.profile,\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"user\" }])\r\n)(Admin);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changePwd } from \"../../store/actions/profileAction\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as validator from \"../auth/Validation\";\r\nimport { logout } from \"../../store/actions/authAction\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ChangePWd(props) {\r\n  const initState = {\r\n    password: \"\",\r\n    pwd: \"\",\r\n    repwd: \"\",\r\n    errors: {\r\n      password: \"\",\r\n      pwd: \"\",\r\n      repwd: \"\",\r\n    },\r\n  };\r\n  const [doc, setDoc] = useState(initState);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = (e) => {\r\n    e.preventDefault();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, doc.errors);\r\n    setDoc({ errors, [id]: value });\r\n  };\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setDoc({ ...doc, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(doc)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(doc.errors);\r\n    // submit if the form is valid\r\n    handleClose();\r\n    if (isFormValid && (doc.pwd === doc.repwd) & (doc.pwd !== doc.password)) {\r\n      props.changePwd(doc);\r\n      props.logout();\r\n    } else {\r\n      window.alert(\"Failed to Update\");\r\n    }\r\n  };\r\n  const { authError, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form>\r\n        <Card>\r\n          <CardContent style={{ margin: \"10px\" }}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Change Current Password\r\n            </Typography>\r\n            <hr />\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Type in the new password below\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"newPassword\"\r\n              label=\"New Password\"\r\n              type=\"password\"\r\n              id=\"pwd\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n              style={{ marginBottom: \"20px\" }}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {doc.errors.pwd}\r\n            </Typography>\r\n            <Typography variant=\"body1\">Re-enter your new password</Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"RePwd\"\r\n              label=\"Re-enter Password\"\r\n              type=\"password\"\r\n              id=\"repwd\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n              style={{ marginBottom: \"20px\" }}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {doc.errors.repwd}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <Typography variant=\"body1\">\r\n              Type in your current password\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"password\"\r\n              label=\"Current Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n              style={{ marginBottom: \"20px\" }}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {doc.errors.password}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Dialog\r\n              open={open}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              onClose={handleClose}\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {\"New Password\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  By clicking yes your current password will be changed. You\r\n                  will be signed out and will require you to login using the\r\n                  password.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  No\r\n                </Button>\r\n                <Button onClick={handleSubmit} color=\"primary\">\r\n                  Yes\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <div>\r\n              <Typography variant=\"body2\" color=\"secondary\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </Typography>\r\n            </div>\r\n            <br />\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePwd: (creds) => dispatch(changePwd(creds)),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangePWd);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { updateEmail } from \"../../store/actions/profileAction\";\r\nimport * as validator from \"../auth/Validation\";\r\nimport { logout } from \"../../store/actions/authAction\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Card,\r\n  CardContent,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction ChangeEmail(props) {\r\n  const initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errors: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n  const [doc, setDoc] = useState(initState);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, doc.errors);\r\n    setDoc({ errors, [id]: value });\r\n  };\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setDoc({ ...doc, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    // e.preventDefault();\r\n    // iterate through the component state as key value pairs and\r\n    //  run the validation on each value.\r\n    // if the validation function handles that key value pair\r\n    //  then it is validated otherwise skipped\r\n    for (let [id, value] of Object.entries(doc)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n\r\n    // if error object is empty then the form is valid\r\n    const isFormValid = validator.isErrorObjectEmpty(doc.errors);\r\n    // submit if the form is valid\r\n\r\n    if (isFormValid) {\r\n      props.updateEmail(doc);\r\n      props.logout();\r\n    } else {\r\n      window.alert(\"Failed to update New e-mail address\");\r\n    }\r\n  };\r\n  const { authError, auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form>\r\n        <Card>\r\n          <CardContent style={{ margin: \"10px\" }}>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Change E-Mail Address\r\n            </Typography>\r\n            <hr />\r\n            <Typography variant=\"body1\">\r\n              Type in the new Email address below\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {doc.errors.email}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n            <Typography variant=\"body1\">\r\n              Type in your current password\r\n            </Typography>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              required\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleChange}\r\n            />\r\n            <Typography color=\"secondary\" variant=\"caption\">\r\n              {doc.errors.password}\r\n            </Typography>\r\n            <br />\r\n            <br />\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Submit\r\n            </Button>\r\n            <Dialog\r\n              open={open}\r\n              TransitionComponent={Transition}\r\n              keepMounted\r\n              onClose={handleClose}\r\n              aria-labelledby=\"alert-dialog-slide-title\"\r\n              aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-slide-title\">\r\n                {\"New E-mail Address\"}\r\n              </DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                  By clicking yes your current login email address will be\r\n                  changed to new email address. You will be signed out and will\r\n                  require you to login using the new email adress.\r\n                </DialogContentText>\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                  No\r\n                </Button>\r\n                <Button onClick={handleSubmit} color=\"primary\">\r\n                  Yes\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n            <div>\r\n              <Typography variant=\"body2\" color=\"secondary\">\r\n                {authError ? <p>{authError}</p> : null}\r\n              </Typography>\r\n            </div>\r\n            <br />\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateEmail: (creds) => dispatch(updateEmail(creds)),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChangeEmail);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Bar, Line } from \"react-chartjs-2\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport { Typography, Grow, Paper } from \"@material-ui/core\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\r\nimport MinimizeIcon from \"@material-ui/icons/Minimize\";\r\n\r\nfunction Graphs(props) {\r\n  const [chartAData, setchartAData] = useState({});\r\n  const [chartBData, setchartBData] = useState({});\r\n  const [noUsers, setNoUsers] = useState([]);\r\n  const [prevUser, setPrevUser] = useState([]);\r\n  const [prevConn, setPrevConn] = useState([]);\r\n  const [noConn, setNoConn] = useState([]);\r\n  const [lwUser, setlwUser] = useState([]);\r\n  const [lwConn, setlwConn] = useState([]);\r\n  const [usageValue, setUsageValue] = useState([]);\r\n  const [prevValue, setPrevValue] = useState([]);\r\n\r\n  let list = [];\r\n  let users = [];\r\n  let conn = [];\r\n  let userPrev = [];\r\n  let connPrev = [];\r\n  let usageRate = [];\r\n  let prevData = [];\r\n  let now = new Date();\r\n  let day = now.getDay() === 0 ? 6 : now.getDay();\r\n\r\n  const { dataList, auth, current_user } = props;\r\n  const chart = () => {\r\n    dataList &&\r\n      dataList.map((data) => {\r\n        return list.push(data);\r\n      });\r\n    if (list !== undefined) {\r\n      for (let i = 0; i < day; i++) {\r\n        if (list.length !== 0) {\r\n          usageRate.push((list[i].noConn / list[i].noUser).toFixed(2));\r\n          users.push(list[i].noUser);\r\n          conn.push(list[i].noConn);\r\n        }\r\n      }\r\n      setUsageValue(usageRate);\r\n      setNoUsers(users[day - 1]);\r\n      setNoConn(conn[day - 1]);\r\n      if (list[6] !== undefined) {\r\n        for (let j = 0; j < list[6].prevC.length; j++) {\r\n          prevData.push((list[6].prevD[j] / list[6].prevC[j]).toFixed(2));\r\n          userPrev.push(list[6].prevD[j]);\r\n          connPrev.push(list[6].prevC[j]);\r\n        }\r\n        setPrevValue(prevData);\r\n        setlwUser(userPrev);\r\n        setlwConn(connPrev);\r\n        if (day === 1) {\r\n          setPrevUser(list[6].prevD[6]);\r\n          setPrevConn(list[6].prevC[6]);\r\n        } else {\r\n          setPrevUser(users[day - 2]);\r\n          setPrevConn(conn[day - 2]);\r\n        }\r\n      }\r\n    }\r\n    setchartAData({\r\n      labels: [\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n        \"Sunday\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Current Week Density\",\r\n          data: usageRate,\r\n          borderColor: [\"rgba(54,162,235,0.6\"],\r\n          borderWidth: 4,\r\n          fill: false,\r\n          pointBackgroundColor: \"rgba(54,162,235,0.6)\",\r\n          pointBorderWidth: \"20px\",\r\n          pointRadius: 5,\r\n          hoverBackgroundColor: \"grey\",\r\n        },\r\n        {\r\n          label: \"Previous Week Density\",\r\n          data: prevData,\r\n          borderColor: [\"rgba(255,99,132,0.6)\"],\r\n          borderWidth: 4,\r\n          fill: false,\r\n          pointBackgroundColor: \"rgba(255,99,132,0.6)\",\r\n          pointBorderWidth: \"20px\",\r\n          pointRadius: 5,\r\n          hoverBackgroundColor: \"grey\",\r\n        },\r\n      ],\r\n    });\r\n\r\n    setchartBData({\r\n      labels: [\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n        \"Sunday\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Current Week Users\",\r\n          data: users,\r\n          backgroundColor: [\r\n            \"rgba(255,99,132,0.6\",\r\n            \"rgba(54,162,235,0.6\",\r\n            \"rgba(255,206,86,0.6\",\r\n            \"rgba(75,192,192,0.6\",\r\n            \"rgba(153,102,255,0.6\",\r\n            \"rgba(255,159,64,0.6\",\r\n            \"rgba(255,99,132,0.6\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255,99,132,0.6\",\r\n            \"rgba(54,162,235,0.6\",\r\n            \"rgba(255,206,86,0.6\",\r\n            \"rgba(75,192,192,0.6\",\r\n            \"rgba(153,102,255,0.6\",\r\n            \"rgba(255,159,64,0.6\",\r\n            \"rgba(255,99,132,0.6\",\r\n          ],\r\n          borderWidth: 2,\r\n          pointBackgroundColor: \"rgba(54,162,235,0.6)\",\r\n          pointBorderWidth: \"20px\",\r\n          hoverBackgroundColor: \"grey\",\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    chart();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dataList]);\r\n\r\n  function checkStatusOfUsers() {\r\n    if (noConn !== undefined) {\r\n      if (noUsers < prevUser) {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwUser[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevUser}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noUsers}\r\n              <ArrowDownwardIcon style={{ color: \"#b71c1c\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      } else if (noUsers > prevUser) {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwUser[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevUser}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noUsers}\r\n              <ArrowUpwardIcon style={{ color: \"#00c853\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwUser[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevUser}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noUsers}\r\n              <MinimizeIcon style={{ color: \"#212121\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  function checkStatusOfConnection() {\r\n    if (noConn !== undefined) {\r\n      if (noConn < prevConn) {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwConn[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevConn}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noConn}\r\n              <ArrowDownwardIcon style={{ color: \"#b71c1c\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      } else if (noConn > prevConn) {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwConn[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevConn}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noConn}\r\n              <ArrowUpwardIcon style={{ color: \"#00c853\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div align=\"left\">\r\n            <Typography variant=\"h6\">Previous Week : {lwConn[day]}</Typography>\r\n            <Typography variant=\"h6\">Yesterday : {prevConn}</Typography>\r\n            <Typography variant=\"h6\">\r\n              Today : {noConn}\r\n              <MinimizeIcon style={{ color: \"#212121\" }} />\r\n            </Typography>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  // check if the email is verified or not\r\n  if (!auth.emailVerified) return <Redirect to=\"/verify\" />;\r\n  //if the user has not created a profile\r\n  if (current_user.isLoaded && current_user.isEmpty)\r\n    return <Redirect to=\"/create\" />;\r\n  // check if the current user is an admin or not\r\n  if (!current_user.status) return <Redirect to=\"/\" />;\r\n\r\n  var prevDay = day === 1 ? 6 : day - 2;\r\n  const checked = true;\r\n  if (dataList !== undefined) {\r\n    return (\r\n      <div\r\n        style={{\r\n          position: \"relative\",\r\n          margin: \"auto\",\r\n          marginTop: \"10px\",\r\n          marginBottom: \"20px\",\r\n        }}\r\n      >\r\n        <Paper>\r\n          <Typography variant=\"h3\" align=\"center\">\r\n            Dashboard\r\n            <hr />\r\n          </Typography>\r\n          <Grid container spcing={3}>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Card variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Line\r\n                      type={\"line\"}\r\n                      data={chartAData}\r\n                      options={{\r\n                        responsive: true,\r\n                        title: {\r\n                          text: \"Mobile Usage\",\r\n                          display: true,\r\n                          fontSize: 25,\r\n                        },\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                autoSkip: true,\r\n                                maxTicksLimit: 10,\r\n                                beginAtZero: true,\r\n                              },\r\n                              gridLines: {\r\n                                display: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                          xAxes: [\r\n                            {\r\n                              ticks: {\r\n                                autoSkip: true,\r\n                                maxTicksLimit: 10,\r\n                              },\r\n                              gridLines: {\r\n                                display: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                        tooltips: {\r\n                          enabled: true,\r\n                        },\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={6}>\r\n                <Card variant=\"outlined\">\r\n                  <CardContent>\r\n                    <Bar\r\n                      type={\"bar\"}\r\n                      data={chartBData}\r\n                      options={{\r\n                        responsive: true,\r\n                        title: {\r\n                          text: \"Number of Users\",\r\n                          display: true,\r\n                          fontSize: 25,\r\n                        },\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                autoSkip: true,\r\n                                maxTicksLimit: 10,\r\n                                beginAtZero: true,\r\n                              },\r\n                              gridLines: {\r\n                                display: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                          xAxes: [\r\n                            {\r\n                              ticks: {\r\n                                autoSkip: true,\r\n                                maxTicksLimit: 10,\r\n                              },\r\n                              gridLines: {\r\n                                display: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                        tooltips: {\r\n                          enabled: true,\r\n                        },\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={4}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <div>\r\n                      <Typography variant=\"h5\" align=\"center\">\r\n                        Mobile Application Usage <hr />\r\n                      </Typography>\r\n                    </div>\r\n                    <div\r\n                      style={{ margin: \"auto\", width: \"45%\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      <div align=\"left\">\r\n                        <Typography variant=\"h6\">\r\n                          Previous Week: {prevValue[day - 1]}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"h6\">\r\n                          Yesterday : {usageValue[prevDay]}\r\n                        </Typography>\r\n                        <Typography variant=\"h6\">\r\n                          Today : {usageValue[day - 1]}\r\n                        </Typography>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={4} align=\"justify\">\r\n                <Card>\r\n                  <CardContent>\r\n                    <div>\r\n                      <Typography variant=\"h5\" align=\"center\">\r\n                        Number of Connections <hr />\r\n                      </Typography>\r\n                    </div>\r\n                    <div\r\n                      style={{ margin: \"auto\", width: \"45%\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {checkStatusOfConnection()}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Grid item xs={4}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <div>\r\n                      <Typography variant=\"h5\" align=\"center\">\r\n                        Number of Users <hr />\r\n                      </Typography>\r\n                    </div>\r\n                    <div\r\n                      style={{ margin: \"auto\", width: \"40%\" }}\r\n                      align=\"center\"\r\n                    >\r\n                      {checkStatusOfUsers()}\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grow>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  let list = state.firestore.ordered.Graph;\r\n  if (list !== undefined) {\r\n    return {\r\n      dataList: list,\r\n      auth: state.firebase.auth,\r\n      current_user: state.firebase.profile,\r\n    };\r\n  } else {\r\n    return {\r\n      dataList: undefined,\r\n      auth: state.firebase.auth,\r\n      current_user: state.firebase.profile,\r\n    };\r\n  }\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"Graph\" }])\r\n)(Graphs);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport { uploadNews, updateContact } from \"../../store/actions/adminAction\";\r\nimport {\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n  Grow,\r\n  Snackbar,\r\n} from \"@material-ui/core\";\r\n\r\nimport * as validator from \"../auth/Validation\";\r\n\r\nfunction Content(props) {\r\n  const { content } = props;\r\n  const initState = {\r\n    msg: \"\",\r\n    date: \"\",\r\n  };\r\n\r\n  const initContact = {\r\n    fN1: \"\",\r\n    lN1: \"\",\r\n    pNo1: 0,\r\n    eM1: \"\",\r\n    fN2: \"\",\r\n    lN2: \"\",\r\n    pNo2: 0,\r\n    eM2: \"\",\r\n    errors: {\r\n      fN1: \"\",\r\n      lN1: \"\",\r\n      pNo1: \"\",\r\n      eM1: \"\",\r\n      fN2: \"\",\r\n      lN2: \"\",\r\n      pNo2: \"\",\r\n      eM2: \"\",\r\n    },\r\n  };\r\n\r\n  const [news, setNews] = useState(initState);\r\n\r\n  const [valid, setValid] = useState(true);\r\n\r\n  const [contact, setContact] = useState(initContact);\r\n\r\n  const [snackbar, setSnackbar] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSnackbar(true);\r\n  };\r\n\r\n  const closeSnackBar = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSnackbar(false);\r\n  };\r\n\r\n  function setData() {\r\n    content &&\r\n      // eslint-disable-next-line array-callback-return\r\n      content.map((item) => {\r\n        setContact({\r\n          ...contact,\r\n          fN1: item.fN1 || \"\",\r\n          lN1: item.lN1 || \"\",\r\n          pNo1: item.pNo1 || 0,\r\n          eM1: item.eM1 || \"\",\r\n          fN2: item.fN2 || \"\",\r\n          lN2: item.lN2 || \"\",\r\n          pNo2: item.pNo2 || 0,\r\n          eM2: item.eM2 || \"\",\r\n        });\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    setData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [content]);\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      maxWidth: \"100%\",\r\n    },\r\n    title: {\r\n      fontSize: 14,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    large: {\r\n      width: theme.spacing(15),\r\n      height: theme.spacing(15),\r\n    },\r\n    tField: {\r\n      padding: 10,\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  const validateInputAndSetState = (id, value) => {\r\n    const errors = validator.validate(id, value, contact.errors);\r\n    setContact({ ...contact, errors, [id]: value });\r\n  };\r\n\r\n  const handleContact = (e) => {\r\n    const { id, value } = e.target;\r\n    validateInputAndSetState(id, value);\r\n    setValid(validator.isErrorObjectEmpty(contact.errors)); //if the error state is empty then valid become true\r\n    // setDoc({ ...doc, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  function handleChange(e) {\r\n    setNews({ ...news, msg: e.target.value, date: new Date() });\r\n  }\r\n\r\n  function handleAnnouncement(e) {\r\n    handleClick();\r\n    props.uploadNews(news);\r\n  }\r\n\r\n  function handleContactUpdate(e) {\r\n    for (let [id, value] of Object.entries(contact)) {\r\n      validateInputAndSetState(id, value);\r\n    }\r\n\r\n    const isFormValid = validator.isErrorObjectEmpty(contact.errors);\r\n\r\n    if (isFormValid) {\r\n      handleClick();\r\n      setValid(true); // set the valid state to true since the form is valid\r\n      delete contact.errors; // delete error state from the final object.\r\n      props.updateContact(contact);\r\n    } else {\r\n      setValid(false);\r\n    }\r\n  }\r\n\r\n  //Returns Snackbar when Updating current user profile\r\n  const handleSnackBar = () => {\r\n    return (\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        open={snackbar}\r\n        autoHideDuration={4000}\r\n        onClose={closeSnackBar}\r\n        message=\"Successfully Updated\"\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton\r\n              size=\"small\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={closeSnackBar}\r\n            >\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    );\r\n  };\r\n\r\n  const { auth, current_user } = props;\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  // check if the current user is an admin or not\r\n  if (!current_user.status) return <Redirect to=\"/\" />;\r\n  const checked = true;\r\n  return (\r\n    <div style={{ width: \"750px\", margin: \"auto\", marginTop: \"10px\" }}>\r\n      {snackbar ? handleSnackBar() : null}\r\n      <Grow\r\n        in={checked}\r\n        style={{ transformOrigin: \"0 0 0\" }}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n      >\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h5\">\r\n              Announcement <hr />\r\n            </Typography>\r\n            <div>\r\n              <TextField\r\n                id=\"news\"\r\n                label=\"Announcement to make...\"\r\n                multiline\r\n                rows={3}\r\n                variant=\"outlined\"\r\n                onChange={handleChange}\r\n                style={{ width: \"100%\" }}\r\n              />\r\n            </div>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleAnnouncement}\r\n              style={{ float: \"right\", margin: \"10px\" }}\r\n            >\r\n              Update\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Grow>\r\n      <Grow\r\n        in={checked}\r\n        style={{ transformOrigin: \"0 0 0\" }}\r\n        {...(checked ? { timeout: 1000 } : {})}\r\n      >\r\n        <Card style={{ marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\">\r\n              Update Contact Information <hr />\r\n            </Typography>\r\n            <div>\r\n              <Typography\r\n                variant=\"h6\"\r\n                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n              >\r\n                For Mobile Application Contact Us\r\n              </Typography>\r\n              <div style={{ margin: \"10px\" }}>\r\n                <TextField\r\n                  error={contact.errors.fN1 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"fN1\"\r\n                  label=\"First Name\"\r\n                  value={contact.fN1}\r\n                  helperText={valid ? null : contact.errors.fN1}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n                <TextField\r\n                  error={contact.errors.lN1 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"lN1\"\r\n                  label=\"Last Name\"\r\n                  value={contact.lN1}\r\n                  helperText={valid ? null : contact.errors.lN1}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: \"10px\" }}>\r\n                <TextField\r\n                  error={contact.errors.pNo1 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"pNo1\"\r\n                  label=\"Phone Number\"\r\n                  value={contact.pNo1}\r\n                  helperText={valid ? null : contact.errors.pNo1}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n\r\n                <TextField\r\n                  error={contact.errors.eM1 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"eM1\"\r\n                  label=\"E-Mail Address\"\r\n                  value={contact.eM1}\r\n                  helperText={valid ? null : contact.errors.eM1}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <Typography\r\n                variant=\"h6\"\r\n                style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\r\n              >\r\n                For Website Contact Us\r\n              </Typography>\r\n              <div style={{ margin: \"10px\" }}>\r\n                <TextField\r\n                  error={contact.errors.fN2 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"fN2\"\r\n                  label=\"First Name\"\r\n                  value={contact.fN2}\r\n                  helperText={valid ? null : contact.errors.fN2}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n                <TextField\r\n                  error={contact.errors.lN2 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"lN2\"\r\n                  label=\"Last Name\"\r\n                  value={contact.lN2}\r\n                  helperText={valid ? null : contact.errors.lN2}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </div>\r\n              <div style={{ margin: \"10px\" }}>\r\n                <TextField\r\n                  error={contact.errors.pNo2 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"pNo2\"\r\n                  label=\"Phone Number\"\r\n                  value={contact.pNo2}\r\n                  helperText={valid ? null : contact.errors.pNo2}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n\r\n                <TextField\r\n                  error={contact.errors.eM2 === \"\" ? false : true}\r\n                  className={classes.tField}\r\n                  id=\"eM2\"\r\n                  label=\"E-Mail Address\"\r\n                  value={contact.eM2}\r\n                  helperText={valid ? null : contact.errors.eM2}\r\n                  onChange={handleContact}\r\n                  variant=\"outlined\"\r\n                  style={{ marginRight: \"10px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              style={{ float: \"right\", margin: \"10px\" }}\r\n              onClick={handleContactUpdate}\r\n            >\r\n              Update\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </Grow>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  var info = state.firestore.ordered.news;\r\n  if (info !== undefined) {\r\n    return {\r\n      content: info, // get the  list of user from the firestore\r\n      auth: state.firebase.auth,\r\n      current_user: state.firebase.profile,\r\n    };\r\n  } else {\r\n    return {\r\n      content: undefined,\r\n      auth: state.firebase.auth,\r\n      current_user: state.firebase.profile,\r\n    };\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    uploadNews: (obj) => dispatch(uploadNews(obj)),\r\n    updateContact: (obj) => dispatch(updateContact(obj)),\r\n  };\r\n};\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  firestoreConnect([{ collection: \"news\" }])\r\n)(Content);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  Paper,\r\n  Container,\r\n  Grid,\r\n  Grow,\r\n} from \"@material-ui/core\";\r\n\r\nfunction HomePage(props) {\r\n  const { contact } = props;\r\n  const checked = true;\r\n\r\n  if (contact !== undefined) {\r\n    return (\r\n      <div>\r\n        <div style={{ width: \"75%\", margin: \"auto\", marginTop: \"10px\" }}>\r\n          <Paper elevation={0}>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Card\r\n                align=\"center\"\r\n                elevation={0}\r\n                style={{\r\n                  backgroundColor: \"#f5f5f5\",\r\n                  border: \"none\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <Typography\r\n                    variant=\"h3\"\r\n                    style={{ backgroundColor: \"#f5f5f5\" }}\r\n                  >\r\n                    E-Card Website\r\n                    <hr />\r\n                  </Typography>\r\n                </div>\r\n                <Container\r\n                  style={{\r\n                    width: \"90%\",\r\n                    padding: \"15px\",\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body1\" align=\"justify\">\r\n                    This website provides information about the E-Card mobile\r\n                    application. The E-Card Mobile application is a digital\r\n                    version of a Rolodex, which means the application will\r\n                    contain the user information relevent to their respective\r\n                    work. A short instruction about the mobile app is provided\r\n                    below.\r\n                  </Typography>\r\n                </Container>\r\n              </Card>\r\n            </Grow>\r\n\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Card>\r\n                <CardContent>\r\n                  {contact &&\r\n                    contact.map((items) => {\r\n                      return (\r\n                        <div key=\"anc\" style={{ backgroundColor: \"#f5f5f5\" }}>\r\n                          <Typography\r\n                            variant=\"h4\"\r\n                            style={{\r\n                              backgroundColor: \"#3949ab\",\r\n                              color: \"white\",\r\n                              paddingLeft: \"5px\",\r\n                            }}\r\n                          >\r\n                            Announcement\r\n                          </Typography>\r\n                          <div style={{ paddingLeft: \"10px\" }}>\r\n                            <Typography variant=\"h6\">\r\n                              Message : {items.msg}\r\n                            </Typography>\r\n                            <Typography variant=\"body1\">\r\n                              Date:{moment(items.date.toDate()).toString()}\r\n                            </Typography>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </CardContent>\r\n              </Card>\r\n            </Grow>\r\n            <Grow\r\n              in={checked}\r\n              style={{ transformOrigin: \"0 0 0\" }}\r\n              {...(checked ? { timeout: 1000 } : {})}\r\n            >\r\n              <Card>\r\n                <div>\r\n                  <CardContent>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      style={{\r\n                        width: \"750px\",\r\n                        float: \"left\",\r\n                        marginTop: \"50px\",\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Typography variant=\"h5\">\r\n                          Login & Register <hr />\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"justify\">\r\n                          You can login or register in the mobile application\r\n                          using a valid email address and a password.\r\n                          Alternatively the same process can be done through the\r\n                          website as well.\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                    <img\r\n                      alt=\"login view\"\r\n                      src=\"https://firebasestorage.googleapis.com/v0/b/visiting-card-5b274.appspot.com/o/screenshots%2FScreenshot_2020-05-09-10-08-52.png?alt=media&token=2e28ac1a-97e0-4342-8a3e-a9b6b40abe74\"\r\n                      style={{\r\n                        float: \"right\",\r\n                        width: \"151px\",\r\n                        margin: \"10px\",\r\n                        border: \"3px solid transparent\",\r\n                        borderColor: \"#3949ab\",\r\n                        padding: \"15px\",\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </div>\r\n              </Card>\r\n            </Grow>\r\n\r\n            <Grow in={checked}>\r\n              <Card\r\n                style={{\r\n                  marginTop: \"10px\",\r\n                  backgroundColor: \"#3949ab\",\r\n                  color: \"white\",\r\n                }}\r\n              >\r\n                <div>\r\n                  <CardContent>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      style={{\r\n                        width: \"750px\",\r\n                        float: \"right\",\r\n                        marginTop: \"50px\",\r\n                      }}\r\n                    >\r\n                      <CardContent\r\n                        style={{\r\n                          backgroundColor: \"#3949ab\",\r\n                          color: \"white\",\r\n                        }}\r\n                      >\r\n                        <Typography variant=\"h5\">\r\n                          Getting a Card of a Person <hr />\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"justify\">\r\n                          You can get the Card from a user by scanning their QR\r\n                          code displayed only through the E-Card mobile\r\n                          application. And then you can select the Card from the\r\n                          list of contacts that you scanned.\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                    <img\r\n                      alt=\"login view\"\r\n                      src=\"https://firebasestorage.googleapis.com/v0/b/visiting-card-5b274.appspot.com/o/screenshots%2FScreenshot_2020-05-09-10-08-20.png?alt=media&token=0bbe177e-77e8-44ad-a3a7-41c084e70d12\"\r\n                      style={{\r\n                        float: \"left\",\r\n                        width: \"151px\",\r\n                        margin: \"10px\",\r\n                        border: \"3px solid transparent\",\r\n                        borderColor: \"white\",\r\n                        padding: \"15px\",\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </div>\r\n              </Card>\r\n            </Grow>\r\n\r\n            <Grow in={checked}>\r\n              <Card style={{ marginTop: \"10px\" }}>\r\n                <div>\r\n                  <CardContent>\r\n                    <Card\r\n                      variant=\"outlined\"\r\n                      style={{\r\n                        width: \"750px\",\r\n                        float: \"left\",\r\n                        marginTop: \"50px\",\r\n                      }}\r\n                    >\r\n                      <CardContent>\r\n                        <Typography variant=\"h5\">\r\n                          Viewing the Selected Card <hr />\r\n                        </Typography>\r\n                        <Typography variant=\"h6\" align=\"justify\">\r\n                          After selecting a Card from the list you can view its\r\n                          information. You also will be able to call the user by\r\n                          clicking on of the mobile numbers or you can e-mail\r\n                          them by clicking on the email address.\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </Card>\r\n                    <img\r\n                      alt=\"login view\"\r\n                      src=\"https://firebasestorage.googleapis.com/v0/b/visiting-card-5b274.appspot.com/o/screenshots%2FScreenshot_2020-05-09-10-08-33.png?alt=media&token=4eb0a49e-e4ae-4add-b34e-1c91b8e46443\"\r\n                      style={{\r\n                        float: \"right\",\r\n                        width: \"151px\",\r\n                        margin: \"10px\",\r\n                        border: \"3px solid transparent\",\r\n                        borderColor: \"#3949ab\",\r\n                        padding: \"15px\",\r\n                      }}\r\n                    />\r\n                  </CardContent>\r\n                </div>\r\n              </Card>\r\n            </Grow>\r\n\r\n            <Grow in={checked}>\r\n              <Card>\r\n                <CardContent>\r\n                  {contact &&\r\n                    contact.map((items) => {\r\n                      return (\r\n                        <div key={items.id}>\r\n                          <div>\r\n                            <Typography\r\n                              variant=\"h4\"\r\n                              style={{\r\n                                backgroundColor: \"#3949ab\",\r\n                                color: \"white\",\r\n                                paddingLeft: \"5px\",\r\n                              }}\r\n                            >\r\n                              Contact Us\r\n                            </Typography>\r\n                          </div>\r\n                          <Card>\r\n                            <CardContent>\r\n                              <Grid container spcing={3}>\r\n                                <Grid item xs={6}>\r\n                                  <div>\r\n                                    <Typography variant=\"h6\">\r\n                                      About Mobile Application\r\n                                      <hr />\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Name: {items.fN1} {items.lN1}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Contact Number: +94{parseInt(items.pNo1)}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Email Address: {items.eM1}\r\n                                    </Typography>\r\n                                  </div>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                  <div>\r\n                                    <Typography variant=\"h6\">\r\n                                      About Web Application\r\n                                      <hr />\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Name: {items.fN2} {items.lN2}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Contact Number: +94{parseInt(items.pNo2)}\r\n                                    </Typography>\r\n                                    <Typography>\r\n                                      Email Address: {items.eM2}\r\n                                    </Typography>\r\n                                  </div>\r\n                                </Grid>\r\n                              </Grid>\r\n                            </CardContent>\r\n                          </Card>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </CardContent>\r\n              </Card>\r\n            </Grow>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <Card style={{ width: \"100%\", height: \"100%\" }}></Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    contact: state.firestore.ordered.news,\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"news\" }])\r\n)(HomePage);\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { register, logout } from \"../../store/actions/authAction\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Typography,\r\n  CardContent,\r\n  Card,\r\n} from \"@material-ui/core\";\r\n\r\nfunction Register(props) {\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    var verifyUser = firebase.auth().currentUser;\r\n    var actionCodeSettings = {\r\n      // After password reset, the user will be give the ability to go back\r\n      // to this page.\r\n      url: \"https://visiting-card-5b274.web.app/create\",\r\n      handleCodeInApp: false,\r\n    };\r\n    verifyUser\r\n      .sendEmailVerification(actionCodeSettings)\r\n      .then(function () {\r\n        //Email User\r\n        window.alert(\"Verification Sent\");\r\n      })\r\n      .catch(function (error) {\r\n        //errors\r\n        window.alert(\"Error : \" + error.message);\r\n      });\r\n  };\r\n\r\n  const { auth } = props;\r\n  if (!auth.uid) return <Redirect to=\"/login\" />;\r\n  var status = auth.emailVerified.toString();\r\n  var user = auth.email.toString();\r\n  if (auth.emailVerified) return <Redirect to=\"/create\" />;\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <form>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Verification\r\n            </Typography>\r\n            <Typography variant=\"body1\">Welcome User:{user}</Typography>\r\n            <Typography variant=\"body1\">Verified: {status}</Typography>\r\n            <br />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={props.logout}\r\n              to=\"/\"\r\n            >\r\n              Logout\r\n            </Button>\r\n            <br />\r\n            <br />\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              fullWidth\r\n              onClick={handleSubmit}\r\n            >\r\n              Send Verification\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </form>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    register: (newUser) => dispatch(register(newUser)),\r\n    logout: () => dispatch(logout()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Navbar from \"./components/auth/layout/NavBar\";\r\nimport Dashboard from \"../src/components/profile/Dashboard\";\r\nimport ViewConnection from \"./components/connections/ViewConnection\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport CreateProfile from \"./components/profile/CreateProfile\";\r\nimport UserProfile from \"./components/profile/UserProfile\";\r\nimport Admin from \"./components/admin/AdminPage\";\r\nimport ChangePwd from \"./components/settings/ChangePassword\";\r\nimport ChangeEmail from \"./components/settings/ChangeEmail\";\r\nimport Graphs from \"./components/admin/Graphs\";\r\nimport Content from \"./components/admin/Content\";\r\nimport HomePage from \"./components/profile/HomePage\";\r\nimport Verification from \"./components/auth/Verification\";\r\n\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Dashboard} />\r\n            <Route path=\"/profile/:id\" component={ViewConnection} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/register\" component={Register} />\r\n            <Route path=\"/create\" component={CreateProfile} />\r\n            <Route path=\"/profile\" component={UserProfile} />\r\n            <Route path=\"/users\" component={Admin} />\r\n            <Route path=\"/pwd\" component={ChangePwd} />\r\n            <Route path=\"/email\" component={ChangeEmail} />\r\n            <Route path=\"/dashboard\" component={Graphs} />\r\n            <Route path=\"/content\" component={Content} />\r\n            <Route path=\"/home\" component={HomePage} />\r\n            <Route path=\"/verify\" component={Verification} />\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n  authError: null,\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_FAILED\":\r\n      return {\r\n        ...state,\r\n        authError: \"Invalid Email or Password!\",\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      return state;\r\n    case \"REGISTER_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        regError: null,\r\n      };\r\n    case \"REGISTER_ERROR\":\r\n      return {\r\n        ...state,\r\n        regError: action.err.message,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","const initState = {\r\n  prof: [],\r\n};\r\n\r\nconst profileReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_PROFILE\":\r\n      return state;\r\n    case \"CREATE_PROFILE_ERROR\":\r\n      return state;\r\n    case \"UPDATE_PROFILE\":\r\n      return state;\r\n    case \"UPDATE_PROFILE_ERROR\":\r\n      return state;\r\n    case \"DELETE_PROFILE\":\r\n      return state;\r\n    case \"DELETE_PROFILE_ERROR\":\r\n      return state;\r\n    case \"GET_PROFILE\":\r\n      return {\r\n        ...state,\r\n        prof: action.doc.data(),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default profileReducer;\r\n","import authReducer from \"./authReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport { firebaseReducer } from \"react-redux-firebase\";\r\nimport { firestoreReducer } from \"redux-firestore\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n  firebase: firebaseReducer,\r\n  firestore: firestoreReducer,\r\n  auth: authReducer,\r\n  profile: profileReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAjGQfILFVUQ-43RDbe9TFsimGaxs508CQ\",\r\n  authDomain: \"visiting-card-5b274.firebaseapp.com\",\r\n  databaseURL: \"https://visiting-card-5b274.firebaseio.com\",\r\n  projectId: \"visiting-card-5b274\",\r\n  storageBucket: \"visiting-card-5b274.appspot.com\",\r\n  messagingSenderId: \"1021119018796\",\r\n  appId: \"1:1021119018796:web:bf745adb103c8c9ab95e89\",\r\n  measurementId: \"G-9D5P6YB5X9\",\r\n  userProfile: \"user\",\r\n  useFirestoreForProfile: true,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({});\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\"; // for authentication\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\"; // for storage\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./store/reducer/rootReducer\";\r\nimport { Provider, useSelector } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { ReactReduxFirebaseProvider, isLoaded } from \"react-redux-firebase\";\r\nimport { createFirestoreInstance } from \"redux-firestore\";\r\nimport fbConfig from \"./config/fbConfig\";\r\nimport throttle from \"lodash/throttle\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  circlular: {\r\n    display: \"flex\",\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nconst rrfConfig = { userProfile: \"user\", useFirestoreForProfile: true }; // react-redux-firebase config\r\n// Initialize firebase instance\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp({ fbConfig });\r\n}\r\n\r\nconst loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (e) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst saveState = (state) => {\r\n  try {\r\n    const serializedState = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", serializedState);\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nconst peristedState = loadState();\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  peristedState,\r\n  compose(\r\n    applyMiddleware(thunk.withExtraArgument({ firebase })) // to add other middleware\r\n  )\r\n);\r\n\r\n// store.subscribe(() => {\r\n//   saveState(store.getState());\r\n// });\r\n\r\nstore.subscribe(\r\n  throttle(() => {\r\n    saveState({\r\n      todos: store.getState().todos,\r\n    });\r\n  }, 1000)\r\n);\r\n\r\nconst rrfProps = {\r\n  firebase,\r\n  config: rrfConfig,\r\n  dispatch: store.dispatch,\r\n  createFirestoreInstance, // <- needed if using firestore\r\n};\r\n\r\nfunction AuthIsLoaded({ children }) {\r\n  const classes = useStyles();\r\n  const auth = useSelector((state) => state.firebase.auth);\r\n  if (!isLoaded(auth))\r\n    return (\r\n      <div>\r\n        <Grid container spcing={6}>\r\n          <Grid item xs={12}>\r\n            {\" \"}\r\n            <div>\r\n              <p></p>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Card\r\n              style={{\r\n                width: \"60%\",\r\n                height: \"300px\",\r\n                margin: \"auto\",\r\n              }}\r\n            >\r\n              <div\r\n                className={classes.circlular}\r\n                style={{\r\n                  margin: \"auto\",\r\n                  paddingTop: \"120px\",\r\n                  width: \"15%\",\r\n                }}\r\n              >\r\n                <CircularProgress />\r\n                <Typography>Loading... </Typography>\r\n              </div>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  return children;\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <ReactReduxFirebaseProvider {...rrfProps}>\r\n      <AuthIsLoaded>\r\n        <App />\r\n      </AuthIsLoaded>\r\n    </ReactReduxFirebaseProvider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}